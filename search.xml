<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>5.17</title>
      <link href="/2023/05/17/%E6%80%BB%E7%BB%93/5.17/"/>
      <url>/2023/05/17/%E6%80%BB%E7%BB%93/5.17/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="d9c1d38bdbb4414e972c1f35f6d681e661c12678dfe1efe4f5b915ff6485de5e">5ed54878ffbf9e892b148842ee1d877b707634034bb82188b32b6382f51677be1942b2ec5faa1cef3682f0478b690dc8f0941b808ea9c565ce17420e23ad80b4abc6c251d148e533fdacd85fc6c682d0d5e3793d334c22aba8348f6c0db19fae9decb58edd8370e90b2c5199f855a626c18bc7f3b118b93cbb4101454c6149bd72ee3b6217b9ec1d18bf74a1144c199e68ce42c2358319be5366c4db79747e905857d413f715190c39307e8333fd25b5e08e3f726643ff2071550ff14f123efe6c60c5fbfb0b5e0f1c3d845125da7f464b1223917d93c654ea91b8cc1d59d1fe4e41d1d422588c305d63a39cd5e11f948e814e4dbfae58b3e10f804fb2435365686cc2309073ad8ae5eaeb3882f85c62eb17c1532b6c03a0f8a0f732a75aead4ce225cada773864a0f567f9dd8b4a2e6cb3cdfecd5472923535d11c80ecf66abea2265b4b0d9453dac1671ccdee6279c615d609da4d518283dc8c3d91218f94150278f782aa97e78ab811d9f75f67f02cbf13dc6b4b06b2dc053a0178d2511359277fec6880f633718fcace791d9c13f84a9258961dcfcfc90e4fd02aefd45f9671682fd2e8417124a2a542070cb555bd3a8d42b179fc70773fc75e99c79aaf57883326f0fa76d47ab12fb6d8f5a63e0c8b6e08b8f0071c8861871cfab28d0f6a39b9f02f10fa43a91b28d2f03fa958885cd89f83de03779abdfa068804fef6317fe14c6f377c517975be62fe12aa36ff715db2fcc97ed6979ab3d729de0d6cdc9dfec7e2fe6efeec27a90d91d6697d55fbc044e34bfa7f4c59aa9108c3c06967c51f82b01e7872f436c7d1eb8594fb5a6999332ce3662062c518085d7e33fd215e69c1b88cd949f462de1d06c7d955c014de16dd117eeea8d6c09419b56344dc5ae622eb9cff6c7da206eee8d7b2a73daf51cdcf9a2f0c0bcc2e9efd081ac13fe039a3bdf0d7cb327a5fb6dd67bf9c33768abae29fa2a8015df760355eeb7c650dbfeff8b8e91d4876824d9d35ec7e05ac8dcfc60b435cbf1c994e5535d53f63f50bc3c400178134615b519b4bfe488ae78fd714febcaf82d5909af1d41e3ad1772982dfd883bcd8ddedf0c84262680</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">生日。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>To See</title>
      <link href="/2023/05/14/lists/to%20see/"/>
      <url>/2023/05/14/lists/to%20see/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="ebdac78eaecaebe09cca9764479ae7f79afca00949b8a37f4e18231b5e89c31f">5ed54878ffbf9e892b148842ee1d877bfd57533bff9df4ffad4d9099b236705397fa357ee8c341950144f11d333c5ccb97c03215f72d8adff4ab5181322bc5de6e73721936b8fcc12e9b1328003ee6e65453e2ad469a866f7e19a507ec7eaf9cc8aa8d5b21acfe8f17e256fb15d2ab76b4f2c4857df7016f39e7bbd7d0bd00ca9ecce291f7cea422f1ea7323c42f959ca9c22d3902fe7ed4cc24a85db8879221410d68be92825986654f8e344bd9078b60453abeef198be9661a533c46334384aeeb5afe7e409b462a863ee05b128d5493d582874d05c6f507b9181a0312d0f07192409c797dca73fdd8145ca60b12e1b5a80374540bdf3c209b4e32fad58c370604597bc05d1f472a8679d0448bdab27e41fac7d04054a26189c3d58700eaa41d5ee5890e864afb776144ad34a202e4576e796e3cabb4aebf19be52d5199ee4b4abb8383bd8c5aae4a0c6190141d26360a83aabc8bc6144383a46d9c22df6e5374242ce6bcbdb32081777f49a14c2fa41cc59e50cbfd0971654f6c6e7235f18076ed73cd5c0d506c1873661c8dec55f75c1c491718e6b00045c801f5fd335bdae2b90ac4bb54cecf79e4b52dbe9b0af2e7c4d39b6b8686013665d8a766858e4338c82e74f9da4a31fa95630181f2d587e8738e2c5ba673dc25cda61401f8ed62c01fd4240697d07103191d74acf2656ae385b1026b0a5c60a54dd8b2384fcb0a21154618cc9a81f79d91a03dc5faff0387727d328ea5582f46831b8252b54faf193be4a10d3928d52a4d39b5fd3a46b0610bd76fc8d689b788dbb53f6eea611695316e6d616ef83eb4270e2e4754b80</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">生日。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> lists </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5.14</title>
      <link href="/2023/05/14/%E6%80%BB%E7%BB%93/5.14/"/>
      <url>/2023/05/14/%E6%80%BB%E7%BB%93/5.14/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="ee0c30f9dfd9101085cc8c607810266710e941fc3bbd9dcc211adb98cd73084d">5ed54878ffbf9e892b148842ee1d877bfd57533bff9df4ffad4d9099b23670537c5970e75503919c7852942bedc85a13b681bc11f73272d3c0932c71cbfbcfc5fb3537aaea4ee86286c9850943277c1f777e1f6a70bb6790efba01c7677adfb8a20a6ef6664814e6c23c114f3062fcd9aedb029117525307b702d3f9d208cc55cd6502ab4af2b1a855f8dfd61bbceb0bcf4712cb7db858df131174d85d67cb1fc5b418f742b70ab6482cc0ebe7d0bc1672eea5d78e13548e7a7d011baa32b39933234b551cf3c1a23d32942b743c719f8bb0b06408eacb07db991a4035b481e0f2f3e5871f4a00fca7bc8a874335216a5cbd9148efa80ac70574feed1447d78b7858845f9adf970a9f0450544f123ae4bd6b3e1cfe61ca388e6138801d1cfe9bcecb81dcb13f93e9ac6628a8f2768dd00df5877d04f1cf20d644113795cf55c3fc7533947a15ac249f297a67b82a4e48aebcd49df914c5584fe8fdef0fc9948358c639e5e9dbeb9fcdd150d3c51665299adaa36713e8128628599f5bdef5b3619c50ec4f4ca1bc7063b7a865c4f19ddc8e3f2d04d25694a5126145065a4f83620c0f436f5c8b58ec5abd9241f2bab20b9ebb2987a6bcb34f5c7b0099b9614c43d6ec5c4f7005119a22c913e37796df1d2386c4104c5ac77a532d7d9fbcb55bedcd225f917916598aa17ec91d199c31af</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">生日。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/05/13/mathe/"/>
      <url>/2023/05/13/mathe/</url>
      
        <content type="html"><![CDATA[<p><a href="https://zhuanlan.zhihu.com/p/441454622">原文</a></p><p>MarkDown数学公式：使用$，将数学公式写在两个$之间。写在两个$$之间是把公式居中。</p><p>1、上下标<br>^ 表示上标， _ 表示下标，如果上标或下标内容多于一个字符，则使用 {} 括起来。</p><p>例 ： $(x^2 + x^y )^{x^y}+ x_1^2&#x3D; y_1 - y_2^{x_1-y_1^2}$</p><p>2、分数<br>公式 \frac{分子}{分母}，或 分子 \over 分母</p><p>例 ： $\ frac{1-x}{y+1}$ 或 $x \over x+y$</p><p>或</p><p>3、开方<br>公式\sqrt[n]{a}</p><p>例 ： $\sqrt[3]{4}$ 或 $\sqrt{9}$</p><p>或</p><p>4、括号<br>() [] 直接写就行，而 {} 则需要转义。<br>例 ： $f(x, y) &#x3D; x^2 + y^2, x \epsilon [0, 100], y \epsilon {1,2,3}$</p><p>大括号，需要括号前加\left和\right。<br>例： $(\sqrt{1 \over 2})^2$ 加大括号后 $\left(\sqrt{1 \over 2}\right)^2$</p><p>加大括号后</p><p>\left 和 \right必须成对出现，对于不显示的一边可以使用 . 代替。<br>例： $\frac{du}{dx} | _{x&#x3D;0}$ 加大后 $\left. \frac{du}{dx} \right| _{x&#x3D;0}$</p><p>加大后</p><p>大括号<br>例 ： $y :\begin{cases} x+y&#x3D;1\ x-y &#x3D; 0 \end{cases}$</p><p>5、向量<br>公式\vec{a}</p><p>例 ： $\vec a \cdot \vec b &#x3D; 1$</p><p>6、定积分<br>公式\int</p><p>例： 符号：$\int$，示例公式：$\int_0^1x^2dx$</p><p>符号： ∫，示例公式：</p><p>7、极限<br>公式\lim_{n\rightarrow+\infty}</p><p>例： 符号：$\lim_{n\rightarrow+\infty}$，示例公式：$\lim_{n\rightarrow+\infty}\frac{1}{n}$</p><p>符号：</p><p>示例公式：</p><p>8、累加&#x2F;累乘<br>公式累加\sum_1^n, 累乘\prod_{i&#x3D;0}^n</p><p>例： 累加$\sum_1^n$, 累乘$\prod_{i&#x3D;0}^n$</p><p>累加</p><p>累乘</p><p>9、省略号<br>公式\ldots 表示底线对其的省略号，\cdots 表示中线对其的省略号，\cdot点乘号。</p><p>例 ： $f(x_1,x_2,\ldots,x_n) &#x3D; \left({1 \over x_1}\right)^2+\left({1 \over x_2}\right)^2+\cdots+\left({1 \over x_n}\right)^2$</p><p>10、符号<br>10.1 数学符号</p><p>10.2 三角函数</p><p>10.3 定积分</p><p>10.4 集合</p><p>10.5 对数符号</p><p>10.6 希腊字母</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>5.13</title>
      <link href="/2023/05/13/lists/5.13/"/>
      <url>/2023/05/13/lists/5.13/</url>
      
        <content type="html"><![CDATA[<h3 id="高数"><a href="#高数" class="headerlink" title="高数"></a>高数</h3><table><thead><tr><th>序</th><th>题</th><th>时间</th></tr></thead><tbody><tr><td>1</td><td>$\lim_{x\rightarrow0}{x^α}{ln^βx&#x3D;0}$？？？(β次方怎么搞，等强化完了来瞅瞅)</td><td>(2023年5月13日20:01:20)</td></tr></tbody></table>]]></content>
      
      
      
        <tags>
            
            <tag> lists </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>5.1</title>
      <link href="/2023/05/10/%E6%80%BB%E7%BB%93/5.10/"/>
      <url>/2023/05/10/%E6%80%BB%E7%BB%93/5.10/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="62f2d0a251978718605a84549e0c6bf6b1c4aae71179afd3e82cb4537eb068b3">5ed54878ffbf9e892b148842ee1d877b707634034bb82188b32b6382f51677be1942b2ec5faa1cef3682f0478b690dc8f0941b808ea9c565ce17420e23ad80b4abc6c251d148e533fdacd85fc6c682d0ff086e910dc546911c057005740f46258458fa5e11e7bf0d06b016e0cc27cf303f8fefece5424df6e4b3e477344f7d19b4ae4091325ad647792ed4f39bd2108d35a1a56d4c08c5daa6bb54879854168116084d0142ce8ec2d4b63c4565b156735b05545ded11bb3c599bdbd17e4bb8a65b68c43cc3bca382f8ded62aa78a86ff15230238e50d20deb12a05bc4e5026f2039c5e5232f9da374c5d9b386557049a64bfbfad2abdfd3ef7db68c646cc8ff97fdb7cd04ff6de1c3c2ec48dbc662421</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">生日。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软工-书后答案</title>
      <link href="/2023/05/06/%E6%9C%9F%E6%9C%AB/%E8%BD%AF%E5%B7%A5/%E4%B9%A6%E5%90%8E%E7%AD%94%E6%A1%88/"/>
      <url>/2023/05/06/%E6%9C%9F%E6%9C%AB/%E8%BD%AF%E5%B7%A5/%E4%B9%A6%E5%90%8E%E7%AD%94%E6%A1%88/</url>
      
        <content type="html"><![CDATA[<p>第一章<br>选择题<br>1-4BDCA<br>判断题<br>1-4××√×<br>第二章<br>选择题<br>1-5CCBAD 6-7CB<br>判断题<br>1-4××××<br>第三章<br>选择题<br>1-4DAAB<br>判断题<br>1-4×√×√<br>第四章<br>1-5BDBCB 6-8CBD<br>1-5√×××× 6-11√××√×√<br>第五章<br>1-5CCCCD<br>1-5×√××√ 6-7××<br>第六章<br>1-5ADBDD 6-10BBDBD 11-12CB<br>1-5×××√× 6-11×××××√<br>第七章<br>1-5ADBCC 6-8BDD<br>1-4√×××<br>第八章<br>1-5ACDBA<br>1-4×√√√<br>第九章<br>1-6DBBDBC<br>1-4√√×√<br>第十章</p><p>1-4BCCA<br>1-5×√√√×<br>第十一章</p><p>1-5BDBAB 6-10BBDAB 11-13 CDA<br>1-5×××√√ 6-11√×√××√<br>第十二章<br>1-5BBAAD 6-10CDCCB 11-12CA<br>1-5√√×√√ 6-10×√×√√ 11-15√××××</p>]]></content>
      
      
      
        <tags>
            
            <tag> 期末 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软工-书本重点</title>
      <link href="/2023/05/06/%E6%9C%9F%E6%9C%AB/%E8%BD%AF%E5%B7%A5/%E4%B9%A6%E6%9C%AC%E9%87%8D%E7%82%B9/"/>
      <url>/2023/05/06/%E6%9C%9F%E6%9C%AB/%E8%BD%AF%E5%B7%A5/%E4%B9%A6%E6%9C%AC%E9%87%8D%E7%82%B9/</url>
      
        <content type="html"><![CDATA[<blockquote><ol><li>程序是人们为了完成特定的功能而编制的一组指令集，它由计算机的语言描述，并且能在计算机系统上执行。而软件不仅包括程序，还包括程序的处理对象——数据，以及与程序开发、维护和使用有关的图文资料（文档）.</li><li>图 1 软件的分类</li></ol></blockquote><blockquote><ol start="3"><li>软件危机的原因：人们对软件产品认识的不足以及对软件开发的内在规律理解的偏差是软件危机出现的本质原因。</li></ol></blockquote><blockquote><ol start="4"><li>软件工程的概念：IEEE对软件工程的定义为：<br>  将系统化、严格约束的、可量化的方法应用于软件的开发、运行和维护，即将工程化应用于软件。同时还包括这里所述方法（系统化、严格约束的、可量化的方法）的研究。<br>具体说来，软件工程是以借鉴传统工程的原则、方法，以提高质量，降低成本为目的指导计算机软件开发和维护的工程学科。它是一种层次化的技术。<br>软件工程：用来开发软件的工程化的方法</li></ol></blockquote><blockquote><ol start="5"><li>软件工程以关注质量为目标，其中过程、方法和工具是软件工程的3个要素。</li></ol></blockquote><blockquote><ol start="6"><li>软件工程研究的内容主要包括以下两个部分：<br>软件开发技术：主要研究软件开发方法、软件开发过程、软件开发工具和环境。<br>软件开发过程管理：主要研究软件工程经济学和软件管理学。</li></ol></blockquote><blockquote><ol start="7"><li>常见的软件开发方法包括：<br>①结构化方法<br>②面向数据结构方法<br>③面向对象方法<br>④形式化方法</li></ol></blockquote><blockquote><ol start="8"><li>软件的诞生和生命周期是一个过程，我们总体上称这个过程为软件过程。</li></ol></blockquote><blockquote><ol start="9"><li>软件生命周期的概念<br>软件产品的生命周期是指从设计该产品的构想开始，到软件需求的确定、软件设计、软件实现、产品测试与验收、投入使用以及产品版本的不断更新，到最终该产品被市场淘汰的全过程。</li></ol></blockquote><blockquote><ol start="10"><li>问题的定义→…………→退出市场<br>图 2 软件的生命周期</li></ol></blockquote><blockquote><ol start="11"><li>软件开发模型<br>①瀑布模型<br>②快速原型模型<br>③增量模型<br>④螺旋模型<br>⑤喷泉模型<br>⑥基于组件的开发模型<br>⑦统一软件开发过程模型<br>⑧敏捷模型<br>⑨极限编程</li></ol></blockquote><blockquote><ol start="12"><li>图 3 螺旋模型</li></ol></blockquote><blockquote><p>13. </p></blockquote><p>图 4 统一软件开发过程模型</p><blockquote><ol start="14"><li>可行性研究需要从多个方面进行评估，主要包括：<br>战略可行性<br>操作可行性<br>计划可行性<br>技术可行性<br>社会可行性<br>市场可行性<br>经济可行性<br>风险可行性</li></ol></blockquote><blockquote><ol start="15"><li>需求分析4步骤：需求获取、分析建模、需求描述、需求验证</li></ol></blockquote><blockquote><ol start="16"><li>结构化分析方法是一种面向数据流的需求分析方法,它主要适用于数据处理领域问题</li></ol></blockquote><blockquote><ol start="17"><li>结构化分析模型<br>此模型的核心是“数据字典”，它描述软件使用或产生的所有数据对象。围绕着这个核心有3种不同的图：<br>“数据流图”指出当数据在软件系统中移动时怎样被变换，以及描绘变换数据流的功能和子功能，用于功能建模<br>“实体-关系图”（E-R图）描绘数据对象之间的关系，用于数据建模<br>“状态转换图”指明了作为外部事件结果的系统行为，用于行为建模</li></ol></blockquote><blockquote><ol start="18"><li>软件设计在软件开发中处于核心地位。</li></ol></blockquote><blockquote><ol start="19"><li>软件设计的原则：模块化、抽象、逐步求精、信息隐藏、复用性设计、灵活性设计</li></ol></blockquote><blockquote><ol start="20"><li>软件设计的分类：<br>从活动任务来看，软件设计是对软件需求进行：数据设计、体系结构设计、接口设计、构件设计和部署设计。<br>数据设计创建在高抽象级别上表示的数据模型和信息模型。然后，数据模型被精化为越来越多和实现相关的特定表示，即基于计算机的系统能够处理的表示。<br>体系结构设计为我们提供软件的整体视图，定义了软件系统各主要成份之间的关系。<br>接口设计告诉我们信息如何流入和流出系统以及被定义为体系结构一部分的构件之间是如何通信的。<br>构件设计完整的描述了每个软件构件的内部细节，为所有本地数据对象定义数据结构，为所有在构件内发生的处理定义算法细节，并定义允许访问所有构件操作的接口。<br>部署设计指明软件功能和子系统如何在支持软件的物理计算环境内分布。<br>从工程管理角度来看，软件设计分为概要设计（总体设计）和详细设计。前期进行概要设计，得到软件系统的基本框架。后期进行详细设计，明确系统内部的实现细节。<br>概要设计确定软件的结构以及各组成部分之间的相互关系。它以需求规格说明书为基础，概要地说明软件系统的实现方案，包括：<br>目标系统的总体架构<br>每个模块的功能描述、数据接口描述及模块之间的调用关系<br>数据库、数据定义和数据结构等<br>其中，目标系统的总体架构为软件系统提供了一个结构、行为和属性的高级抽象，由构成系统的元素的描述、这些元素之间的相互作用、指导元素集成的模式以及这些模式的约束组成。</li></ol></blockquote><blockquote><ol start="21"><li>数据库结构设计包括：概念结构设计、逻辑结构设计和物理结构设计。</li></ol></blockquote><blockquote><p>22. </p></blockquote><p>图 5 结构化设计与结构化分析的关系</p><blockquote><ol start="23"><li>面向对象的基本概念<br>(1) 一种使用对象（它将属性与操作封装为一体）、消息传送、类、继承、多态和动态绑定来开发问题域模型之解的范型。<br>(2) 一种基于对象、类、实例和继承等概念的技术。<br>(3) 用对象作为建模的原子。</li></ol></blockquote><blockquote><ol start="24"><li>名词解释<br>对象：现实世界中各种各样的实体。其中，内部状态称为属性，运动规律称为方法和属性。<br>类：具有相似内部状态和运动规律的实体集合。<br>消息：对象之间的相互联系和相互作用的方式。包括发送消息的对象，接收消息的对象，消息传递办法，消息内容，反馈。<br>类的特性：抽象、继承、封装、多态、重载<br>包：各种各样的不同系统。系统称为包。<br>包的接口类：系统通过设立接口界面类或对象来与其他系统进行交互。其他系统只看到这个接口界面类或对象，即接口类。</li></ol></blockquote><blockquote><ol start="25"><li>统一建模语言（Unified Modeling Language，UML）是一种通用的可视化建模语言，可以用来描述、可视化、构造和文档化软件密集型系统的各种工件。它记录了与被构建系统的有关的决策和理解，可用于对系统的理解、设计、浏览、配置、维护以及控制系统的信息。这种建模语言已经得到了广泛的支持和应用，并且已被ISO组织发布为国际标准。</li></ol></blockquote><blockquote><ol start="26"><li>UML的图<br>  UML的主要内容可以由下列5类图（共9种图形）来定义。<br>用例图：用例是对系统提供的功能的描述。从用户的角度描述系统功能，并指出各个功能的参与者。<br>静态图：描述系统静态结构。<br>类图：定义系统中的类。表示类之间的关系，如关联、依赖、聚合等，也包括类的内部结构（类的属性和操作）。类图描述静态关系，系统整个生命周期有效。<br>对象图：类图的实例。使用与类图相同的标识。不同点在于对象图显示类的多个对象实例，而不是实际的类。一个对象图是类图的实例。<br>包图：包或类组成。表示包与包之间的关系。用于表述系统之间的分层结构。<br>行为图：描述系统的动态模型和组成对象间的交互关系。其中状态图描述类的对象所有可能的状态以及事件发生时状态的转移条件。<br>交互图：描述对象间的交互关系。<br>顺序图：显示对象之间的动态合作关系，强调对象间的消息发送顺序，并显示对象间的交互。<br>协作图：描述对象间的协作关系，显示对象间的动态合作关系。显示对象以及它们之间关系。<br>实现图：提供关于系统实现方面的信息。<br>构件图：描述代码构件的物理结构及各构建之间的依赖关系。<br>部署图：定义系统中软硬件的物理体系结构。</li></ol></blockquote><blockquote><ol start="27"><li>UML“4+1”视图<br>UML用模型来描述系统的静态特征结构及动态特征行为，从不同的角度为系统建模，形成不同的视图。每个视图代表完整系统描述中的一个对象，表示这个系统中的一个特定的方面，每个视图都由一组图组成，每张图强调系统中某一方面的信息。<br>为了更好地表现同一事物的不同方面，我们经常采用不同的视图，每个视图从一个角度看待和描述问题；在UML中，存在“4+1”视图。<br>用例视图：描述项目干系人的需求，所有其他视图都是从用例视图派生而来，该视图把系统的基本需求捕获为用例并提供构造其他视图的基础。<br>逻辑视图：描述系统功能和词汇。作为类和对象的集合，重点是展示对象和类是如何组成系统、实现所需系统行为的。</li></ol></blockquote><p>图 6 UML”4+1”视图</p><blockquote><ol start="28"><li>用例图中的关系</li></ol></blockquote><blockquote><ol start="29"><li>属性和操作的可见性<br>符号种类语义</li></ol><ul><li>   Public公有的可供其它类使用</li></ul><h1 id="Protected受保护的其子类可以使用"><a href="#Protected受保护的其子类可以使用" class="headerlink" title="Protected受保护的其子类可以使用"></a>Protected受保护的其子类可以使用</h1><ul><li>   Private私有的只有本类的操作才能使用<br>~Package包的只有在同一包中声明的类才能使用</li></ul></blockquote><blockquote><p>30.<br>多重性（multiplicity）（用于表示关联中角色的多重性）<br>多重性表示可以有多少个对象参与该类关联<br>非负整数的子集表示<br>表示没有实例的关联，一般不用</p></blockquote><p>二元关联指两个类之间的关联。多元关联指一对多或多对多的关联。三元关联使用菱形符号连接关联类。<br> 三元关联<br>聚合关系（ aggregation ）<br>聚合是一种特殊的关联关系，指明一个聚集（整体）和组成部分之间的关系，即它表示关联的双方是整体与部分的关系，从整体这一端来看，它表示：has a…（即：表示我有…，我拥有…）这层含义。</p><p>示例：飞机场与飞机的关系，一个飞机场可以聚集多架飞机，如果飞机场不存在了，那么飞机是可以存在的，因此它们之间就是整体与部分的关系。聚合关系表明两者之间的关系没有那么紧密。</p><p>组合关系（ contains-a关系）<br>组合是一种强聚合，部分和整体的生命周期是一致的。其中，部分不可以单独存在，即：整体消失了，部分也随之消失。<br>组合的特点：<br>整体和部分的关系，个体唯一属于一个整体。<br>组合关系中的“整体”控制着“部分”的生存期。<br>组合是一种特殊的聚合关系，又称强聚合。</p><p>示例：一个窗口包含有若干个按钮和菜单，在创建窗口的同时，这些按钮和菜单就被同时创建出来了，如果窗口关闭了，那么这些按钮和菜单也就不存在了，所以窗口与按钮和菜单是一种组合关系。窗口与按钮和菜单的生命周期一致，要么同时创建要么同时销毁。</p><p>关联类（association class）：可根据需要进行设计<br>关联本身也可以有特性，通过建立关联类可以进一步描述关联的属性、操作和其他信息。<br>通过虚线与关联连接。</p><p>依赖关系<br>描述了一个类的变化对依赖于它的类产生影响的情况。如果修改元素X的定义可能会导致对另一个元素Y的定义修改，则称元素Y依赖元素X。<br>依赖关系主要体现在以下几种情况：<br>一个类向另一个类发送消息，即一种调用关系，一个类调用了另一个类的方法<br>一个类是另一个类的数据成员类型<br>一个类是另一个类的操作的参数类型<br>依赖主要体现在使用（调用）上，即元素A使用元素B所提供的功能，如果没有元素B所提供的功能，那么元素A是无法完成工作的，如果此时元素B修改了其中的某个方法，那么直接就会影响到元素A的工作。由此可见，依赖关系是强耦合关系中的一种。</p><p>泛化（extends）<br>在面向对象中泛化一般称为继承关系，存在于父类与子类、父接口与子接口之间。泛化表示的是：kind of…，即表示是一种…东西。</p><p>实现（implements）<br>对应于类和接口之间的关系，表示一个类实现一个或多个接口。</p><p>示例：2种常用表示法</p><blockquote><ol start="31"><li>顺序图<br>顺序图描述了一组对象的交互方式，它表示完成某项行为的对象和这些对象之间传递消息的时间顺序。顺序图由对象（参与者的实例也是对象）、生命线、控制焦点、消息等组成。生命线是一条垂直的虚线，表示对象的存在时间；控制焦点是一个细长的矩形，表示对象执行一个操作所经历的时间段；消息是作用于控制焦点上的一条水平带箭头的实现，表示消息的传递。</li></ol></blockquote><blockquote><p>32. </p></blockquote><p>图 7 面向对象的需求分析的示意图</p><blockquote><ol start="33"><li>在面向对象的分析中，通常需要建立3种形式的模型，它们分别是：<br>描述系统数据结构的对象模型<br>描述系统控制结构的动态模型<br>描述系统功能的功能模型<br>这3种模型都涉及数据、控制、操作等共同的概念，只不过每种模型描述的侧重点不同。一个典型的软件系统通常包括的内容为：它使用数据结构（对象模型），执行操作（动态模型），并且完成数据值的变化（功能模型）。</li></ol></blockquote><blockquote><ol start="34"><li>根据建模的侧重点的不同，可以将软件体系结构的模型分为结构模型、框架模型、动态模型、过程模型和功能模型5种。</li></ol></blockquote><blockquote><ol start="35"><li>调用∕返回风格<br>   各个构件通过调用其他构件和获得返回参数来进行交互，配合完成功能。包括主程序&#x2F;子程序、面向对象风格、层次结构。</li></ol></blockquote><blockquote><ol start="36"><li>MVC（模型-视图-控制器）<br>MVC强调将用户的输入、数据模型和数据表示方式分开设计，一个交互式应用系统由模型、视图、控制器3部分组成，分别对应内部数据、数据表示和输入&#x2F;输出控制部分。</li></ol></blockquote><p>图 8 MVC模型处理流程图<br>系统拦截到用户请求，根据相应规则（多数采用路由技术），将用户请求交给控制器，控制器决定哪个模型来处理用户的请求；模型根据业务逻辑处理完毕后将结果返回给控制器；然后控制器将数据提交给视图；视图把数据组装之后，呈现给用户。其中，模型处理所有的业务逻辑和规则，视图只负责显示数据，控制器负责用户的请求，这样将业务和表现层分离，以便业务代码可以被用于任何相似的业务中，视图代码也可以根据需要随意替换。</p><blockquote><ol start="37"><li>Java EE体系结构框架<br>   MVC是很多现代体系结构框架的基础，主要应用于企业和电子商务系统中。Java EE的核心体系结构就是在MVC框架的基础上进行扩展得到的，如图所示。Java EE模型是分层结构，中间是3层（表示层、业务层和集成层）包含应用构件，客户层和资源层处于应用的外围。</li></ol></blockquote><p>图 9 J2EE的核心体系结构框架</p><blockquote><ol start="38"><li>面向对象设计的原则<br>模块化<br>抽象化<br>信息隐藏<br>低耦合<br>高内聚<br>复用性</li></ol></blockquote><blockquote><ol start="39"><li>系统设计的步骤</li></ol></blockquote><blockquote><ol start="40"><li>典型的面向对象设计模型</li></ol></blockquote><blockquote><ol start="41"><li>软件测试是发现软件中错误和缺陷的主要手段。为了保证软件产品的质量，软件开发人员通过软件测试发现产品中存在的问题，并对其进行及时的修改。可以说，软件测试的过程就是发现并改正软件缺陷的过程。</li></ol></blockquote><blockquote><p>42. </p></blockquote><p>图 10 V模型示意图</p><p>图 11 W模型示意图</p><blockquote><p>43. </p></blockquote><p>图 12 软件测试的分类</p><blockquote><ol start="44"><li>例：<br>Dim x,y As Integer<br>Dim z As Double<br>IF(x&gt;0 AND y&gt;0) THEN<br>z&#x3D;z&#x2F;x<br>END IF<br>IF(x&gt;1 OR z&gt;1) THEN<br>z&#x3D;z+1<br>END IF<br>z&#x3D;y+z</li></ol></blockquote><p>对代码进行逻辑覆盖测试的第一步就是绘制出代码的程序流程图。</p>]]></content>
      
      
      
        <tags>
            
            <tag> 期末 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软工-书上习题</title>
      <link href="/2023/05/06/%E6%9C%9F%E6%9C%AB/%E8%BD%AF%E5%B7%A5/%E4%B9%A0%E9%A2%98/"/>
      <url>/2023/05/06/%E6%9C%9F%E6%9C%AB/%E8%BD%AF%E5%B7%A5/%E4%B9%A0%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>1.某银行储蓄工作流程：储户填写的存款单或取款单，由业务员输入系统。若存款，则记录存款人的姓名、住址、电话号码、身份证号码、存款类型、存款日期、到期日期、利率及密码<br>（可选）等存款信息，根据存款利息标准，打印存款单给储户； 若取款，系统首先核对储户密码，若密码正确或存款时未留密 码，则系统根据取款信息，计算利息并打印包含利息清单的取 款单给储户。银行则包含名称、地址和电话等信息。<br>要求：请用数据流图说明某银行的储蓄工作流程，并给出该流程涉及到的实体关系的E-R图。<br><img src="/img/er-1.png"></p><p> </p><ol><li>某程序的流程图：</li></ol><p>要求：<br>（1）计算它的环路复杂性。<br>（2）为了完成基本路径测试，求它的一组独立的路径。<br>答案：<br>（1）计算它的环路复杂性。<br>   V(G)&#x3D;P+1&#x3D;6+1&#x3D;7<br>（2）为了完成基本路径测试，求它的一组独立的路径。 </p><pre><code>路径1： （0）—①—（13）—（19）路径2： （0）—②—③—（14）—（19）路径3： （0）—②—④—⑤—（15）—（19）路径4： （0）—②—④—⑥—⑦—（16）—（19）路径5： （0）—②—④—⑥—⑧—⑨—（17）—（19）路径6： （0）—②—④—⑥—⑧—⑩—（11）—（18）—（19）路径7： （0）—②—④—⑥—⑧—⑩—（12）—（19）</code></pre><p> <br>3. 设计下列伪码程序的语句覆盖和路径覆盖的测试用例：<br>Start<br>Input(x,y,z)<br>If(x&gt;0) and (y&gt;0)<br>Then m&#x3D;x+y<br>Else n&#x3D;x-y<br>End if<br>If (z&gt;x) or (z&lt;y)<br>Then m&#x3D;z-a<br>Else n&#x3D;z+a<br>End if<br>Print(m,n)<br>Stop </p><p>答案：<br>（1）语句覆盖，两组测试用例，条件为<br>a)T T      b)F F      或者：  a)T F        b)F T<br>（2）路径覆盖，四组测试用例，条件为：<br>a)T T   b)F F  c)T F  d)F T             </p><ol start="4"><li><p>数据字典类型题 P55<br>某旅馆的电话服务如下：可以拨分机号或外线号码。分机号是从8000至8999。外线号码先拨0，然后是市话号码或长话号码。长话号码是以区号和市话号码组成。区号是从100到999中任意的数字串。市话号码是以局号和分局号组成。局号可以是866，766，566，466中任意一个号码。分局号是任意长度为4的数字串。<br>要求：写出在数据字典中，电话号码的数据条目的定义。<br>电话号码&#x3D;分机号｜外线号码<br>分机号&#x3D;8000…8999<br>外线号码&#x3D;0+［市话号码｜长话号码］<br>长话号码&#x3D;区号+市话号码<br>区号&#x3D;100…999<br>市话号码&#x3D;局号+分局号<br>局号&#x3D;［866｜766｜566｜466］<br>分局号&#x3D;4{数字}4 </p></li><li><p>某航空公司规定，乘客可以免费托运重量不超过30公斤的行李。当行李重量超过30公斤时，对头等舱的国内乘客超重部分每公斤收费4元，对其他舱的国内乘客超重部分每公斤收费6元，对外国乘客超重部分每公斤收费比国内乘客多一倍。<br>（1）绘出原始决策表。<br>（2）绘出优化后的决策树<br>答案：</p></li><li><p>计算n的阶乘，n＝5。<br>（1）请画出程序流程图<br>（2）请画出该算法的N-S图<br>（3）请用PAD图来表示该算法</p></li><li><p>图书管理系统功能性需求说明如下:<br>① 图书管理系统能够为一定数量的借阅者提供服务。每个借阅者能够拥有唯一标识其存在的编号。图书馆向每一个借阅者发放图书证，其中包含每一个借阅者的编号和个人信息。提供的服务包括：提供查询图书信息、查询个人信息服务和预定图书服务等。<br>② 当借阅者需要借阅图书、归还书籍时需要通过图书管理员进行，即借阅者不直接与系统交互，而是通过图书管理员充当借阅者的代理和系统交互。<br>③ 系统管理员主要负责系统的管理维护工作，包括对图书、书目、借阅者的添加、删除和修改。并且能够查询借阅者、图书和图书管理员的信息。<br>④ 可以通过图书的名称或图书的ISBN&#x2F;ISSN号对图书进行查找。<br>回答下面问题：<br>（1）该系统中有哪些参与者?<br>（2）确定该系统中的类，找出类之间的关系并画出类图。<br>答案：<br>（1）该系统中的参与者：借阅者，图书管理员，系统管理员<br>（2）确定该系统中的类有：用户类、用户角色类、图书类、预定类、借阅类、书目类                                        </p></li><li><p>图书管理系统功能性需求说明如下:<br>① 图书管理系统能够为一定数量的借阅者提供服务。每个借阅者能够拥有唯一标识其存在的编号。图书馆向每一个借阅者发放图书证，其中包含每一个借阅者的编号和个人信息。提供的服务包括：提供查询图书信息、查询个人信息服务和预定图书服务等。<br>② 当借阅者需要借阅图书、归还书籍时需要通过图书管理员进行，即借阅者不直接与系统交互，而是通过图书管理员充当借阅者的代理和系统交互。<br>③ 系统管理员主要负责系统的管理维护工作，包括对图书、数目、借阅者的添加、删除和修改。并且能够查询借阅者、图书和图书管理员的信息。<br>④ 可以通过图书的名称或图书的ISBN&#x2F;ISSN号对图书进行查找。<br>回答下面问题：<br>（1）该系统中有哪些参与者?<br>（2）画出系统“借阅者预定图书”的时序图。<br>答案：<br>（1）该系统中的参与者：借阅者，图书管理员，系统管理员<br>（2）时序图：“借阅者预定图书”的时序图如下</p></li></ol>]]></content>
      
      
      
        <tags>
            
            <tag> 期末 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>软工-书后简答</title>
      <link href="/2023/05/06/%E6%9C%9F%E6%9C%AB/%E8%BD%AF%E5%B7%A5/%E4%B9%A6%E5%90%8E%E7%AE%80%E7%AD%94/"/>
      <url>/2023/05/06/%E6%9C%9F%E6%9C%AB/%E8%BD%AF%E5%B7%A5/%E4%B9%A6%E5%90%8E%E7%AE%80%E7%AD%94/</url>
      
        <content type="html"><![CDATA[<h1 id="第一章"><a href="#第一章" class="headerlink" title="第一章"></a>第一章</h1><h3 id="1-与计算机硬件相比，计算机软件有哪些特点？"><a href="#1-与计算机硬件相比，计算机软件有哪些特点？" class="headerlink" title="(1)与计算机硬件相比，计算机软件有哪些特点？"></a>(1)与计算机硬件相比，计算机软件有哪些特点？</h3><blockquote><p>1、无法直接观察计算机软件的物理形态，只能通过观察它的实际运行情况来了解它的功能、特性和质量等;<br>2、人们在分析、设计、开发、测试软件产品的过程中，以及在软件开发项目的管理过程中，渗透了大量的脑力劳动;<br>3、不存在像硬件一样的磨损和老化现象，但存在着缺陷维护和技术更新的问题;<br>4、软件的开发和运行必须依赖于特定的计算机系统环境;<br>5、具有可复用性。</p></blockquote><h3 id="2-为什么说软件工程的发展可以在一定程度上解决软件危机的各种弊端？"><a href="#2-为什么说软件工程的发展可以在一定程度上解决软件危机的各种弊端？" class="headerlink" title="(2)为什么说软件工程的发展可以在一定程度上解决软件危机的各种弊端？"></a>(2)为什么说软件工程的发展可以在一定程度上解决软件危机的各种弊端？</h3><blockquote><p>答: 软件工程就是人们了解决 软件危机而随之诞生的。且软件工程的基本目标也是相对于软件危机出现的原因而设置的。</p></blockquote><h3 id="3-简述软件工程的基本原则。"><a href="#3-简述软件工程的基本原则。" class="headerlink" title="(3)简述软件工程的基本原则。"></a>(3)简述软件工程的基本原则。</h3><blockquote><p>答:<br>(1) 将软件的生命周期划分为多个阶段，对各个阶段实行严格的项目管理。<br>(2) 坚持阶段评审制度，以确保软件产品的质量。<br>(3) 实施严格的产品控制，以适应软件规格的变更。在软件开发的过程中，用户需求很可能不断发生变化。<br>(4) 采用现代程序设计技术。<br>(5) 开发出来的软件产品应该能够清楚地被审查。<br>(6) 合理地安排软件开发小组的人员，并且开发小组的人员要少而精。<br>(7) 不断地改进软件工程实践。</p></blockquote><h3 id="4-简述软件工程研究的内容。"><a href="#4-简述软件工程研究的内容。" class="headerlink" title="(4)简述软件工程研究的内容。"></a>(4)简述软件工程研究的内容。</h3><p>主要包含以下两个方面</p><table><thead><tr><th>方面</th><th>研究</th></tr></thead><tbody><tr><td>1.软件开发技术</td><td>主要研究软件开发方法、软件开发过程、软件开发工具和环境。</td></tr><tr><td>2.软件开发过程管理</td><td>主要研究软件工程经济学和软件工程管理学。</td></tr></tbody></table><h3 id="5-简述软件工程的三要素。"><a href="#5-简述软件工程的三要素。" class="headerlink" title="(5)简述软件工程的三要素。"></a>(5)简述软件工程的三要素。</h3><blockquote><p>过程、方法、工具</p></blockquote><h3 id="6-简述软件工程的目标。"><a href="#6-简述软件工程的目标。" class="headerlink" title="(6)简述软件工程的目标。"></a>(6)简述软件工程的目标。</h3><blockquote><p>① 达到要求的软件功能<br>②取得较好的软件性能<br>③开发出高质量的软件<br>④付出较低的开发成本<br>⑤ 需要较低的维护费用<br>⑥ 能按时完成开发工作，及时交付使用</p></blockquote><h3 id="7-通常有哪几种软件开发方法？"><a href="#7-通常有哪几种软件开发方法？" class="headerlink" title="(7)通常有哪几种软件开发方法？"></a>(7)通常有哪几种软件开发方法？</h3><blockquote><p>答：<br>①结构化方法<br>②面向数据结构方法<br>③面向对象方法<br>④形式化方法</p></blockquote><h3 id="8-列举你所知道的软件工程工具"><a href="#8-列举你所知道的软件工程工具" class="headerlink" title="(8)列举你所知道的软件工程工具"></a>(8)列举你所知道的软件工程工具</h3><blockquote><p>编写C&#x2F;C++的Dev C++ 和 Codeblocks以及Visual Studio<br>编写Java的Eclipse和IntelliJ Idea 等等</p></blockquote><h1 id="第二章"><a href="#第二章" class="headerlink" title="第二章"></a>第二章</h1><h3 id="1-如何理解软件生命周期的内在特征？"><a href="#1-如何理解软件生命周期的内在特征？" class="headerlink" title="(1)如何理解软件生命周期的内在特征？"></a>(1)如何理解软件生命周期的内在特征？</h3><blockquote><p>答：软件产品的生命周期是指<br>从设计该产品的构想开始，到软件需求的确定、软件设计、软件实现、产品测试和验收、投入使用，以及产品版本的不断更新，到该产品最终被市场淘汰的全过程。</p></blockquote><blockquote><p>软件生命周期这个概念从时间的角度将软件的开发和维护的复杂过程分解为若干个阶段，每个阶段都完成特定的、相对独立的任务。<br>在软件的开发过程中每一个阶段都不可缺少，合理地划分软件生命周期的各个阶段，使各个阶段之间既相互区别又相互联系，为每个阶段赋予特定的任务，这些都是软件开发项目成功的重要因素。</p></blockquote><h3 id="2-请对比瀑布模型、快速原型模型、增量模型和螺旋模型。"><a href="#2-请对比瀑布模型、快速原型模型、增量模型和螺旋模型。" class="headerlink" title="(2)请对比瀑布模型、快速原型模型、增量模型和螺旋模型。"></a>(2)请对比瀑布模型、快速原型模型、增量模型和螺旋模型。</h3><blockquote><p>答：<br>（一）瀑布模型(1980)：它是一种线性的开发模型，具有不可回溯性。开发人员必须等前一阶段的任务完成后，才能开始进行后一阶段的工作，并且前一阶段的输出往往就是后一阶段的输入。<br>它的优点：过程模型简单，执行容易<br>它的缺点：无法适应变更。<br>它适用于具有以下特征的软件开发项目：① 在软件开发的过程中，需求不发生或发生很少的变化，并且开发人员可以一次性获取全部需求。否则，由于瀑布模型较差的可回溯性，在后续阶段需求经常性地变更需要付出高昂的代价。 ②软件开发人员具有丰富的经验，对软件应用领域很熟悉。③ 软件项目的风险较低。该模型不具有完善的风险控制机制。</p></blockquote><blockquote><p>（二）快速原型模型（语言unix shell和超文本）：它允许在需求分析阶段对软件的需求进行初步而非完全的分析和定义，快速设计开发出软件系统的原型，该原型向用户展示待开发软件的全部或部分功能和性能；该模型的基本思想实施快速建立一个能反映用户主要需求的原型系统，让用户在计算机上试用它，通过实践来了解目标系统的概貌。然后根据用户试用之后提出的许多修改意见，开发人员按照用户的意见快速地修改原型系统，然后再次请用户试用······反反复复地改进，直到原型系统满足用户的要求。<br>它适用于具有以下特征的软件开发项目：① 已有产品或产品的原型（样品），只需客户化的工程项目。② 简单而熟悉的行业或领域 ③ 有快速原型开发工具 ④ 进行产品移植或升级</p></blockquote><blockquote><p>（三）增量模型：该模型是把待开发的软件系统模块化，将每个模块作为一个增量组件，从而分批次地分析、设计、编码和测试这些增量组件。<br>该模型的最大特点就是将待开发的软件系统模块化和组件化。<br>它的优点：① 将待开发的软件系统模块化，可以分批次地提交软件产品，使用户可以及时了解软件项目的进展。② 以组件为单位进行开发降低了软件开发的风险。一个开发周期内的错误不会影响到整个软件系统。③ 开发顺序灵活。开发人员可以对构件的实现顺序进行优先级排序，先完成需求稳定的核心组件。当组件的优先级发生变化时，还能及时地对实现顺序进行调整。<br>它适用于具有以下特征的软件开发项目：① 软件产品可以分批次地进行交付 ② 待开发的软件系统能够被模块化 ③ 软件开发人员对应用领域不熟悉，难以一次性地进行系统开发。④ 项目管理人员把握全局的水平较高。<br>（四）螺旋模型：该模型是一种风险较大的大型软件项目开发的过程模型。它把瀑布模型与快速原型模型结合起来，并且加入了这两种模型所忽略了的风险分析。它把开发过程分为制定计划、风险分析、实施工程和客户评价4种活动。<br>它的优点：将风险分析扩展到各个阶段中，大幅度降低了软件开发的风险。<br>它的缺点：该模型的控制和管理较为复杂，可操作性不强，对项目管理人员的要求较高。<br>它适用于风险较大的大型软件项目的开发。</p></blockquote><h3 id="3-在统一软件开发过程模型中，核心工作流程包含哪些？"><a href="#3-在统一软件开发过程模型中，核心工作流程包含哪些？" class="headerlink" title="(3)在统一软件开发过程模型中，核心工作流程包含哪些？"></a>(3)在统一软件开发过程模型中，核心工作流程包含哪些？</h3><blockquote><p>答：核心工作流程有业务建模、需求、分析和设计、实现、测试和部署。</p></blockquote><h3 id="4-当需求不能一次搞清楚，且系统需求比较复杂时，应选用哪种开发模型比较适合？"><a href="#4-当需求不能一次搞清楚，且系统需求比较复杂时，应选用哪种开发模型比较适合？" class="headerlink" title="(4)当需求不能一次搞清楚，且系统需求比较复杂时，应选用哪种开发模型比较适合？"></a>(4)当需求不能一次搞清楚，且系统需求比较复杂时，应选用哪种开发模型比较适合？</h3><blockquote><p>答：选择螺旋模型，当需求不太清楚且系统复杂的时候，也就意味着风险较大，同时螺旋模型也是一种综合性的模型。</p></blockquote><h3 id="5-敏捷过程的核心价值观有哪些？它对传统方法的“反叛”体现在哪些方面？"><a href="#5-敏捷过程的核心价值观有哪些？它对传统方法的“反叛”体现在哪些方面？" class="headerlink" title="(5)敏捷过程的核心价值观有哪些？它对传统方法的“反叛”体现在哪些方面？"></a>(5)敏捷过程的核心价值观有哪些？它对传统方法的“反叛”体现在哪些方面？</h3><blockquote><p>答：（健康码）<br>核心价值观：<br>①个体与交互高于过程和工具<br>②可运行软件高于详尽的文档<br>③与客户协作高于合同（契约）<br>④对变更及时响应高于遵循计划</p><blockquote><p>体现：敏捷方法对传统方法的“反叛”体现在以人为中心，不再依靠文档来控制过 程，认为传统过程过于僵化，文档繁琐，主张对传统过程“瘦身”，在上述价 值观的支配下，做到能够为准。</p></blockquote></blockquote><h3 id="6-什么是软件过程？它与软件工程方法学有何关系？"><a href="#6-什么是软件过程？它与软件工程方法学有何关系？" class="headerlink" title="(6)什么是软件过程？它与软件工程方法学有何关系？"></a>(6)什么是软件过程？它与软件工程方法学有何关系？</h3><blockquote><p>软件的诞生和生命周期是一个过程，成为软件过程。<br>软件工程方法学的三要素是：过程、方法和工具，<br>软件过程是其的一个重要要素。</p></blockquote><h3 id="极限编程"><a href="#极限编程" class="headerlink" title="极限编程"></a>极限编程</h3><blockquote><p>软件需求模糊且容易改变<br>团队少于10人<br>开发点集中<br>强调用户需求和团队工作</p><blockquote><p>实践性较强的规范化软件开发方法   </p></blockquote></blockquote><h1 id="第三章"><a href="#第三章" class="headerlink" title="第三章"></a>第三章</h1><p>（<a href="https://blog.csdn.net/qq_42192693/article/details/109103706">可行性研究总结</a>）</p><h3 id="1-可行性研究的任务"><a href="#1-可行性研究的任务" class="headerlink" title="1.可行性研究的任务"></a>1.可行性研究的任务</h3><h4 id="高度凝练的系统分析和设计过程"><a href="#高度凝练的系统分析和设计过程" class="headerlink" title="(高度凝练的系统分析和设计过程)"></a>(高度凝练的系统分析和设计过程)</h4><blockquote><p>可行性研究的基本任务，是对新建或改建项目的主要问题，从技术经济角度进行全面的分析研究，并对其投产后的经济效果进行预测，在既定的范围内进行方案论证的选择，以便最合理地利用资源，达到预定的社会效益和经济效益。</p></blockquote><h3 id="2-简述技术可行性"><a href="#2-简述技术可行性" class="headerlink" title="2.简述技术可行性"></a>2.简述技术可行性</h3><blockquote><p>通过对待开发系统的功能、性能和限制条件，确定现有技术是否能实现相关的解决方案，以及在现有资源条件下实现的技术风险有多大。<br>ps.技术可行性是系统开发过程中难度最大的工作，可行性研究的关键！</p></blockquote><h3 id="3-简述操作可行性"><a href="#3-简述操作可行性" class="headerlink" title="3.简述操作可行性"></a>3.简述操作可行性</h3><blockquote><p>在给定的工作环境（政治意识形态，法律法规，社会道德，民族意识，系统运行的组织机构，人员环境）下能否正常运行或运行好坏成度的衡量</p></blockquote><h3 id="4-简述经济可行性"><a href="#4-简述经济可行性" class="headerlink" title="4.简述经济可行性"></a>4.简述经济可行性</h3><blockquote><p>(成本-效益分析)<br>评估项目经济合理性，估算成本与预期利润比<br>一般由四部分组成：<br>购置并安装软硬件及相关设备的费用<br>项目开发费用<br>软硬件系统安装、运行和维护费用<br>人员培训费用</p></blockquote><h3 id="5-软件成本估算"><a href="#5-软件成本估算" class="headerlink" title="5.软件成本估算"></a>5.软件成本估算</h3><blockquote><p>1.代码行技术<br>2.任务分解技术（总任务拆分多个相对独立任务，再加起来）</p></blockquote><h3 id="6-可行性研究步骤"><a href="#6-可行性研究步骤" class="headerlink" title="6.可行性研究步骤"></a>6.可行性研究步骤</h3><blockquote><p>1.明确系统目标<br>2.分析研究现行系统<br>3.设计新系统的高层逻辑模型<br>4.获得并比较可行的方案<br>5.撰写可行性研究报告</p></blockquote><h3 id="7-项目开发计划目的"><a href="#7-项目开发计划目的" class="headerlink" title="7.项目开发计划目的"></a>7.项目开发计划目的</h3><blockquote><p>（一）研发项目计划的目的<br>研发项目计划的目的是为了确定整个研发项目在时间、资金、人员等方面的安排，从各方面保证研发项目在执行过程中的效率和效益。更细致地来说，研发项目计划的目的包括以下5个方面：<br>1.确定并描述各项任务（活动）范围；<br>2.确定全部人员；<br>3.制定时间进度表；<br>4.阐明必需的人力、财力、物力；<br>5.确定预算。<br>（二）研发项目计划的作用<br>1.指导研发项目实施，使研发项目实施人员明确自己的职责，便于自我管理和自我激励；另一方面，使得一些支持性工作以及并行工作及时得到安排，避免因计划不周造成各子流程之间的相互牵掣。<br>2.将研发项目计划的目标、假设、前提与最终选择确定研发项目方案的决策过程写成书面文件，使得小组和有关管理人员，对研发项目有关事项，如资源配备、风险化解、人员安排、时间进度、内外接口等形成共识，形成事先约定。<br>3.有效的支持管理，帮助研发项目有关人员之间的交流沟通，有助于大家统一认识。<br>4.确定评价研发项目进展、对研发项目进行控制和考核绩效基准，便于研发项目实施过程的控制。<br>5.计划是研发项目总的输入之一，实质就是把实际运行情况与研发项目计划不断比较以提炼经验教训的过程。通过计划和总结，研发项目过程中的经验和教训被很好地记录和升华，成为组织财富。                </p></blockquote><h1 id="第四章"><a href="#第四章" class="headerlink" title="第四章"></a>第四章</h1><h3 id="1-如何理解需求分析的作用和重要性。"><a href="#1-如何理解需求分析的作用和重要性。" class="headerlink" title="1.如何理解需求分析的作用和重要性。"></a>1.如何理解需求分析的作用和重要性。</h3><blockquote><p>答：<br>需求分析是一个非常重要的过程，它完成的好坏直接影响了后续软件开发的质量。</p></blockquote><h3 id="3-如何理解结构化需求分析方法的基本思想"><a href="#3-如何理解结构化需求分析方法的基本思想" class="headerlink" title="3.如何理解结构化需求分析方法的基本思想"></a>3.如何理解结构化需求分析方法的基本思想</h3><blockquote><p>答：结构化的需求分析方法是一种面向数据流的需求分析方法，其中数据作为独立实体转换，数据建模定义了数据的属性和关系，操作数据的处理建模表明当数据在系统流动时处理如何转换数据。</p></blockquote><h3 id="5-简述数据字典的作用。"><a href="#5-简述数据字典的作用。" class="headerlink" title="5.简述数据字典的作用。"></a>5.简述数据字典的作用。</h3><blockquote><p>答：数据字典用于定义数据流图中各个图元的具体内容，为数据流图中出现的图形元素做出确切的解释。</p></blockquote><h2 id="一·数据流图基本图形符号"><a href="#一·数据流图基本图形符号" class="headerlink" title="一·数据流图基本图形符号"></a>一·数据流图基本图形符号</h2><blockquote><p>加工、数据流、数据存储和外部实体</p></blockquote><h2 id="二·需求分析主要目的"><a href="#二·需求分析主要目的" class="headerlink" title="二·需求分析主要目的"></a>二·需求分析主要目的</h2><blockquote><p>您好，这是必应。根据我的搜索结果，需求分析的主要目的是把用户对待开发软件提出的“要求”或“需要”进行分析与整理，确认后形成描述完整、清晰与规范的文档，确定软件需要实现哪些功能，完成哪些工作²³。需求分析可以帮助避免或尽早剔除项目早期错误，从而提高生产率、降低开发成本、改进系统质量³。</p></blockquote><p>源: 与必应的对话， 2023&#x2F;5&#x2F;7<br>(1) 需求分析（软件工程学术语）_百度百科. <a href="https://baike.baidu.com/item/%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90/2012709">https://baike.baidu.com/item/需求分析/2012709</a>.<br>(2) 需求分析怎么做？ - 知乎. <a href="https://www.zhihu.com/question/323125580">https://www.zhihu.com/question/323125580</a>.<br>(3) [需求管理-3]：什么是需求分析？常用的需求分析的流程与方法 …. <a href="https://bing.com/search?q=%E9%9C%80%E6%B1%82%E5%88%86%E6%9E%90%E4%B8%BB%E8%A6%81%E7%9B%AE%E7%9A%84">https://bing.com/search?q=%e9%9c%80%e6%b1%82%e5%88%86%e6%9e%90%e4%b8%bb%e8%a6%81%e7%9b%ae%e7%9a%84</a>.<br>(4) 需求分析的目的和主要任务是什么. <a href="https://www.weidianyuedu.com/content/0317935758205.html">https://www.weidianyuedu.com/content/0317935758205.html</a>.<br>(5) 为什么要进行需求分析?通常对软件系统有哪些需求? - CSDN博客. <a href="https://blog.csdn.net/azgu84837027/article/details/102205816">https://blog.csdn.net/azgu84837027/article/details/102205816</a>.</p><h2 id="三·常用的需求获取的方法有以下几种¹²⁴⁵⁶："><a href="#三·常用的需求获取的方法有以下几种¹²⁴⁵⁶：" class="headerlink" title="三·常用的需求获取的方法有以下几种¹²⁴⁵⁶："></a>三·常用的需求获取的方法有以下几种¹²⁴⁵⁶：</h2><ul><li><strong>用户访谈</strong>：通过与用户进行一对一或一对多的沟通，了解用户的需求、问题、痛点和期望¹²⁵。</li><li><strong>用户调查</strong>：通过设计问卷，收集用户的反馈和数据，量化用户的需求和满意度¹²⁴⁵。</li><li><strong>现场观摩</strong>：通过观察用户在实际场景中使用产品或服务的过程，发现用户的行为和问题¹²⁵。</li><li><strong>文档考古</strong>：通过查阅相关的文档、资料、报告等，获取用户的背景信息和业务流程¹²⁵。</li><li><strong>建立联合分析小组</strong>：通过邀请不同角色的人员参与需求分析，利用他们的专业知识和经验，提高需求的质量和可行性¹⁵。</li><li><strong>原型法</strong>：通过制作产品或功能的原型，让用户进行实际体验和测试，收集用户的反馈和建议¹⁵。</li><li><strong>模型驱动</strong>：通过使用一些分析模型，如3W、5W1H、卡诺模型、马斯洛需求层次理论等，对用户需求进行深入分析和挖掘²³。</li></ul><p>源: 与必应的对话， 2023&#x2F;5&#x2F;7<br>(1) 简述需求获取的方法，工具和要注意的问题-CSDN博客. <a href="https://bing.com/search?q=%E5%B8%B8%E7%94%A8%E7%9A%84%E9%9C%80%E6%B1%82%E8%8E%B7%E5%8F%96%E7%9A%84%E6%96%B9%E6%B3%95">https://bing.com/search?q=%e5%b8%b8%e7%94%a8%e7%9a%84%e9%9c%80%e6%b1%82%e8%8e%b7%e5%8f%96%e7%9a%84%e6%96%b9%e6%b3%95</a>.<br>(2) 需求采集：4种方法 - 知乎. <a href="https://zhuanlan.zhihu.com/p/33004868">https://zhuanlan.zhihu.com/p/33004868</a>.<br>(3) 软件工程中，需求获取有哪些方法？-百度经验. <a href="https://jingyan.baidu.com/article/1974b28951e687f4b0f77466.html">https://jingyan.baidu.com/article/1974b28951e687f4b0f77466.html</a>.<br>(4) 需求分析：需求调研的七种方法 - CSDN博客. <a href="https://blog.csdn.net/yang_changchun/article/details/53781453">https://blog.csdn.net/yang_changchun/article/details/53781453</a>.<br>(5) 软件工程问题_如何理解需求分析的作用和重要性_lyking07的 …. <a href="https://blog.csdn.net/qq_46511838/article/details/111305294">https://blog.csdn.net/qq_46511838/article/details/111305294</a>.<br>(6) 产品经理必备之常用需求挖掘的7个方法 | 人人都是产品经理. <a href="https://www.woshipm.com/pmd/3259942.html">https://www.woshipm.com/pmd/3259942.html</a>.</p><h1 id="第五章"><a href="#第五章" class="headerlink" title="第五章"></a>第五章</h1><h3 id="1-简述软件设计与需求分析的关系。"><a href="#1-简述软件设计与需求分析的关系。" class="headerlink" title="1.简述软件设计与需求分析的关系。"></a>1.简述软件设计与需求分析的关系。</h3><blockquote><p>答：软件设计就是要把需求规格说明书中归纳的需求转换为可行的解决方案，并把解决方案反映到设计说明书里。需求分析回答软件系统能“做什么”的问题，而软件设计就是要解决“怎么做的问题”。</p></blockquote><h3 id="5-什么是模块、模块化软件设计为什么要模块化"><a href="#5-什么是模块、模块化软件设计为什么要模块化" class="headerlink" title="5.什么是模块、模块化软件设计为什么要模块化?"></a>5.什么是模块、模块化软件设计为什么要模块化?</h3><blockquote><p>答：模块是数据说明、可执行语句等程序对象的集合，是构成程序的基本构件，可以被单独命名并通过名字来访问。<br>模块化是把系统或程序划分为独立命名并且可以独立访问的模块，每个模块完成一个特定的子功能。<br>软件模块化的目的是建立可重用的软件组件，在不需要修改或仅作少量修改的情况下，可再次用来组建新的软件系统，提高软件的开发周期和可靠性。</p></blockquote><h3 id="7-简述面向数据流的设计方法的主要思想。"><a href="#7-简述面向数据流的设计方法的主要思想。" class="headerlink" title="7.简述面向数据流的设计方法的主要思想。"></a>7.简述面向数据流的设计方法的主要思想。</h3><blockquote><p>答：主要是指依据一定的映射规则，将需求分析阶段得到的数据描述、系统的输入端到输出端所经历的一系列变换或处理的数据流图转换为目标系统的结构描述</p></blockquote><h3 id="9-改进的Jackson图与传统的Jackson图相比有哪些优点"><a href="#9-改进的Jackson图与传统的Jackson图相比有哪些优点" class="headerlink" title="9.改进的Jackson图与传统的Jackson图相比有哪些优点?"></a>9.改进的Jackson图与传统的Jackson图相比有哪些优点?</h3><blockquote><p>答：可以清晰地表示层次结构，易于对自顶向下的结构进行描述；<br>结构易懂、易用，并且比较直观、形象；<br>不仅可以表示数据结构，也可以表示程序结构；</p></blockquote><h3 id="一·判定表："><a href="#一·判定表：" class="headerlink" title="一·判定表："></a>一·判定表：</h3><blockquote><p>根据输入做出不同响应的工具</p></blockquote><table><thead><tr><th>判定表</th><th>具体</th></tr></thead><tbody><tr><td>优点</td><td>判定表充分考虑了输入域之间的组合情况，每条规则覆盖了多条输入条件，考虑输入的约束关系，降低了漏测的风险。同时利用判定表可推断出需求规格本身的逻辑性，反向证明了需求的正确。</td></tr><tr><td>缺点</td><td>当输入项过多时，规则数以2的n次方剧增，判定表会非常庞大，采用判定表合并时会造成逻辑缺失，业务混乱错误的情况。</td></tr></tbody></table><h3 id="二·结构化设计-SD"><a href="#二·结构化设计-SD" class="headerlink" title="二·结构化设计(SD)"></a>二·结构化设计(SD)</h3><blockquote><p>是一种面向数据流的设计方法<br>强调程序规范化</p></blockquote><h1 id="第六章"><a href="#第六章" class="headerlink" title="第六章"></a>第六章</h1><h4 id="类："><a href="#类：" class="headerlink" title="类："></a>类：</h4><blockquote><p>具有相似内部状态和运动规律的实体的集合</p></blockquote><h4 id="对象："><a href="#对象：" class="headerlink" title="对象："></a>对象：</h4><blockquote><p>现实世界中各种各样的实体</p></blockquote><h4 id="消息："><a href="#消息：" class="headerlink" title="消息："></a>消息：</h4><blockquote><p>消息是指对象间相互联系和相互作用的方式</p></blockquote><h4 id="UML："><a href="#UML：" class="headerlink" title="UML："></a>UML：</h4><blockquote><p>一种标准的图形化建模语言，是面向对象分析与设计的一种标准表示。<br>不是一种程序设计语言</p></blockquote><h3 id="3-什么是面向对象方法-面向对象方法的特点有哪些？"><a href="#3-什么是面向对象方法-面向对象方法的特点有哪些？" class="headerlink" title="3.什么是面向对象方法?面向对象方法的特点有哪些？"></a>3.什么是面向对象方法?面向对象方法的特点有哪些？</h3><blockquote><p>答：面向对象的方法是为了模拟现实世界，使各种不同的现实世界系统在计算机中得以实现，进而为工作、学习、生活提供帮助<br>面向对象的特点：</p><blockquote><p>把数据和操作封装在一起，形成对象。对象是构成软件系统的基本构件<br>把特征相似的对象抽象为类</p><blockquote><p>类之间可以存在继承或被继承的关系，形成软件系统的层次结构<br>对象类之间通过发送消息进行通信<br>将对象的私有信息封装起来。</p></blockquote></blockquote></blockquote><h3 id="6-UML的作用和优点有哪些？"><a href="#6-UML的作用和优点有哪些？" class="headerlink" title="6.UML的作用和优点有哪些？"></a>6.UML的作用和优点有哪些？</h3><blockquote><p>答：UML的作用：UML是一种通用的可视化建模语言，可以用来描述、可视化、构造和文档化软件密集系统的各种工作<br>UML的优点：<br>UML语言使系统建模过程标准化，统一化，规范化。<br>UML在整个软件开发过程中采用相同的概念和表示方法，在不同的开发阶段，不必转换概念和表示方法，避免了传统软件开发方法的两个鸿沟。<br>UML采用图形化的表现形式。产生的模型易于理解，易于开发人员与用户之间的沟通，从而能够及时得到用户的反馈信息。<br>用UML进行系统建模所得到的建模制品不仅仅包括各种模型框图，还有大量丰富的文档，这些文档给系统后期的维护工作带来了便捷。<br>UML不是一门程序设计语言，但可以使用代码生成工具将UML模型转换为多种程序设计语言代码，或使用反向生成工具将程序源代码转换为UML模型。</p></blockquote><h3 id="9-类之间的外部关系有至有几种类型-每种关系表达什么语义？"><a href="#9-类之间的外部关系有至有几种类型-每种关系表达什么语义？" class="headerlink" title="9.类之间的外部关系有至有几种类型?每种关系表达什么语义？"></a>9.类之间的外部关系有至有几种类型?每种关系表达什么语义？</h3><blockquote><p>答：类之间的外部关系：关联、依赖、泛化、实现<br>关联：表达模型元素间的一种语义关系<br>依赖：表示的两个元素之间语义上的联系<br>泛化：描述类的一般-特殊关系<br>实现：将一个模型连接到另外一个模型</p></blockquote><h1 id="第七章"><a href="#第七章" class="headerlink" title="第七章"></a>第七章</h1><h4 id="状态图"><a href="#状态图" class="headerlink" title="状态图"></a>状态图</h4><blockquote><p>状态图(Statechart Diagram)是描述一个实体基于事件反应的动态行为，显示了该实体如何根据当前所处的状态对不同的事件做出反应</p></blockquote><h3 id="4-简述面向对象分析的过程。"><a href="#4-简述面向对象分析的过程。" class="headerlink" title="4.简述面向对象分析的过程。"></a>4.简述面向对象分析的过程。</h3><blockquote><p>答：<br>①首先要找到系统的操作者，既用例的参与者<br>②可以把参与者执行的每一个系统功能都看作一个用例<br>③确定了系统的所有用例之后，就可以开始识别目标系统中的对象和类了，把具有相似属性和操作的对象定义为了一个类</p></blockquote><h3 id="5-什么是动态模型"><a href="#5-什么是动态模型" class="headerlink" title="5.什么是动态模型?"></a>5.什么是动态模型?</h3><blockquote><p>答：动态模型描述对象和关系的状态、状态转换的触发事件、对象的服务（行为）。</p></blockquote><h3 id="6-什么是对象模型"><a href="#6-什么是对象模型" class="headerlink" title="6.什么是对象模型?"></a>6.什么是对象模型?</h3><blockquote><p>答：对象模型描述了现实世界中的“类与对象”以及它们之间的关系，表示了目标系统的静态数据结构</p></blockquote><h3 id="7-什么是功能模型？"><a href="#7-什么是功能模型？" class="headerlink" title="7.什么是功能模型？"></a>7.什么是功能模型？</h3><blockquote><p>答：功能模型表明了系统中数据之间的依赖关系，以及有关的数据处理功能，它由一组数据流图组成</p></blockquote><h1 id="第八章"><a href="#第八章" class="headerlink" title="第八章"></a>第八章</h1><h3 id="2-软件体系结构的作用体现在哪些方面"><a href="#2-软件体系结构的作用体现在哪些方面" class="headerlink" title="2.软件体系结构的作用体现在哪些方面?"></a>2.软件体系结构的作用体现在哪些方面?</h3><blockquote><p>答：规范软件开发的基础结构；便于开发人员与用户的沟通；模块化、层次化设计，有利于减少返工，提高效率；便于系统开发前期、后期的筹备与服务</p></blockquote><h3 id="4-什么是软件质量属性"><a href="#4-什么是软件质量属性" class="headerlink" title="4.什么是软件质量属性?"></a>4.什么是软件质量属性?</h3><blockquote><p>答：软件质量属性是指软件系统在其生存周期过程中所表现出的各种特征</p></blockquote><h3 id="5-客户机-x2F-服务器体系结构有什么特点？"><a href="#5-客户机-x2F-服务器体系结构有什么特点？" class="headerlink" title="5.客户机&#x2F;服务器体系结构有什么特点？"></a>5.客户机&#x2F;服务器体系结构有什么特点？</h3><blockquote><p>答：通过合理地划分三层结构，使之在逻辑上保持相对独立，提高系统的可维护性和可扩展性能更灵活地选用相对应的平台和应用系统，使之在处理负荷能力上与处理特性上分别适应各层的要求；并且这些平台和组成部分可以具体良好的可升级性和开放性<br>应用的各层可以独立地并行开发，每层可以根据自己的特点选用合适的开发语言<br>安全性相对较高，应用层屏蔽了客户直接访问数据库的权利，使得未授权用户或黑客难以绕过应用层直接获取敏感数据，为数据的安全管理提供了系统结构的支持</p></blockquote><h3 id="6-MVC模型有什么特点"><a href="#6-MVC模型有什么特点" class="headerlink" title="6.MVC模型有什么特点?"></a>6.MVC模型有什么特点?</h3><blockquote><p>答：MVC可以最大化地重用代码，且灵活性极高</p></blockquote><h3 id="一·C-x2F-S结构一般有两种形态"><a href="#一·C-x2F-S结构一般有两种形态" class="headerlink" title="一·C&#x2F;S结构一般有两种形态"></a>一·C&#x2F;S结构一般有两种形态</h3><table><thead><tr><th>模型</th><th>服务器</th><th>客户机</th></tr></thead><tbody><tr><td>瘦客户机模型</td><td>数据管理和应用逻辑都在服务器端执行</td><td>只负责表示</td></tr><tr><td>胖客户机模型</td><td>只负责管理数据</td><td>客户机上的软件实现应用逻辑以及与系统的交互</td></tr><tr><td>（<a href="https://blog.csdn.net/qq_29134495/article/details/51637808">C&#x2F;S两层三层及多层</a>）</td><td></td><td></td></tr></tbody></table><h3 id="二·面向对象设计的特性"><a href="#二·面向对象设计的特性" class="headerlink" title="二·面向对象设计的特性"></a>二·面向对象设计的特性</h3><blockquote><p>封装，继承，多态（复用性）<br><a href="https://blog.csdn.net/qq_42733811/article/details/88380562">详细</a></p></blockquote><h3 id="三·面向对象设计阶段的主要任务是"><a href="#三·面向对象设计阶段的主要任务是" class="headerlink" title="三·面向对象设计阶段的主要任务是"></a>三·面向对象设计阶段的主要任务是</h3><blockquote><p>系统设计和对象设计</p></blockquote><h1 id="第九章"><a href="#第九章" class="headerlink" title="第九章"></a>第九章</h1><h3 id="3-简述面向对象的设计原则。"><a href="#3-简述面向对象的设计原则。" class="headerlink" title="3.简述面向对象的设计原则。"></a>3.简述面向对象的设计原则。</h3><blockquote><p>答：①模块化、②抽象化、③信息隐藏、④低耦合、⑤高内聚、⑥复用性</p></blockquote><h3 id="4-简述系统设计和对象设计。"><a href="#4-简述系统设计和对象设计。" class="headerlink" title="4.简述系统设计和对象设计。"></a>4.简述系统设计和对象设计。</h3><blockquote><p>答：系统设计关注于确定实现系统的策略和目标系统的高层结构。<br>对象设计以问题域的对象设计为核心，其结果是一个详细的对象模型</p></blockquote><h1 id="第十章"><a href="#第十章" class="headerlink" title="第十章"></a>第十章</h1><h3 id="2-请简述编程风格的重要性。要形成良好的编程风格可以从哪些方面做起"><a href="#2-请简述编程风格的重要性。要形成良好的编程风格可以从哪些方面做起" class="headerlink" title="2.请简述编程风格的重要性。要形成良好的编程风格可以从哪些方面做起?"></a>2.请简述编程风格的重要性。要形成良好的编程风格可以从哪些方面做起?</h3><blockquote><p>答：重要性：具有良好编程风格的源程序具有较强的可读性、可维护性、同时还能提高团队开发的效率。良好的个人编程风格是一个优秀程序员素质的一部分。<br>①版权和版本声明、②程序版本、③注释、④命名规则、⑤数据说明、⑥语句构造、⑦输入\输出、⑧效率</p></blockquote><h3 id="3-编程语言主要有哪几类-总结每类语言的优缺点。"><a href="#3-编程语言主要有哪几类-总结每类语言的优缺点。" class="headerlink" title="3.编程语言主要有哪几类?总结每类语言的优缺点。"></a>3.编程语言主要有哪几类?总结每类语言的优缺点。</h3><table><thead><tr><th>编程语言</th><th>优点</th><th>缺点</th></tr></thead><tbody><tr><td>①机器语言</td><td>执行速度快</td><td>对程序员的要求较高，花费时间长，直观性差，容易出错</td></tr><tr><td>②汇编语言</td><td>可高效地访问、控制计算机的各种硬件设备</td><td>不能直接识别汇编语言</td></tr><tr><td>③高级语言</td><td>易懂、易记、易改、移植性较强</td><td>经过解释或编译才能被计算机识别、执行,其效率比汇编语言还低</td></tr><tr><td>④超高级语言</td><td>易懂、易记、易改、移植性较强</td><td>经过解释或编译才能被计算机识别、执行,其效率比汇编语言还低</td></tr></tbody></table><h3 id="5-为什么要对源程序进行注释"><a href="#5-为什么要对源程序进行注释" class="headerlink" title="5.为什么要对源程序进行注释?"></a>5.为什么要对源程序进行注释?</h3><blockquote><p>答：注释有利于软件开发人员之间以及开发人员和用户之间进行交流的重要途径，有利于日后的软件维护。</p></blockquote><h1 id="第十一章"><a href="#第十一章" class="headerlink" title="第十一章"></a>第十一章</h1><h3 id="1-基本路径法"><a href="#1-基本路径法" class="headerlink" title="1.基本路径法"></a>1.<a href="https://blog.csdn.net/qq_42733811/article/details/88380562">基本路径法</a></h3><blockquote><p>G的环路复杂度V(G)&#x3D;E-N+2(E为流图边数，N为流图节点数)<br>                 &#x3D;P+1（p为G中判定节点数）<br>步骤：<br>1.导出<a href="https://blog.csdn.net/qq_42052733/article/details/115923993">控制流图</a>（先画一个圈1代表开始根据代码判断多少个if一路画最后再画个圈，所有if结果都指向这个圈。即相对于代码要多俩圈）<br>2.计算环路复杂度V(G)<br>3.确定<a href="https://blog.csdn.net/DFireTesting/article/details/108208011">线性无关的路径</a>的基本集(ps·就是所有不重复的从圈1推到圈最终点)<br>4.生成测试用例，确保基本路径中每条路径（就那几个有效值带入，写个输入和输出）</p></blockquote><h3 id="2-应用题答案"><a href="#2-应用题答案" class="headerlink" title="2.应用题答案"></a>2.<a href="https://blog.csdn.net/m0_61811926/article/details/128988988">应用题答案</a></h3><h3 id="3-黑百盒测试区别"><a href="#3-黑百盒测试区别" class="headerlink" title="3.黑百盒测试区别"></a>3.<a href="https://zhuanlan.zhihu.com/p/39352619">黑百盒测试区别</a></h3>]]></content>
      
      
      
        <tags>
            
            <tag> 期末 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/05/04/%E6%80%BB%E7%BB%93/5.4/"/>
      <url>/2023/05/04/%E6%80%BB%E7%BB%93/5.4/</url>
      
        <content type="html"><![CDATA[<p>没啥好说的，但又想说一下！只有那句话了！妖魔鬼怪快离开妖魔鬼怪快离开啊啊啊啊啊啊！！！（戾气丛生！）（假装有图）（过两天再去整个图，今天累了。。。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>5.1</title>
      <link href="/2023/05/01/%E6%80%BB%E7%BB%93/5.1/"/>
      <url>/2023/05/01/%E6%80%BB%E7%BB%93/5.1/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="db0b01b76a539c139cf6bbc28fe006c59b9030e2865d9cb8434d89a2c4f5a682">5ed54878ffbf9e892b148842ee1d877b738cdb48d163cbeab67f59631ef522817f1c083f0072268820c4b86e4c2fe3cae7d75d2192b1cdd70553e46135564ecee672b58dda3a832da3f50b4fdb4e9700958a1109e5ca2f9eea0740aecad70032f949501807da200b7c322ab0985abeceb2afdec2fe2933151f75bb8425da03edabeadf010eb059d27ddbce33fd7c0bd659104f541d02070a44a4b771e44d4b3f</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">生日。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/27/408/%E6%95%B0%E6%9E%84/%E4%B8%89%E8%A7%92%E7%9F%A9%E9%98%B5/"/>
      <url>/2023/04/27/408/%E6%95%B0%E6%9E%84/%E4%B8%89%E8%A7%92%E7%9F%A9%E9%98%B5/</url>
      
        <content type="html"><![CDATA[<p>稀疏矩阵</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/27/408/%E6%95%B0%E6%9E%84/%E4%BC%98%E5%85%88%E7%BA%A7/"/>
      <url>/2023/04/27/408/%E6%95%B0%E6%9E%84/%E4%BC%98%E5%85%88%E7%BA%A7/</url>
      
        <content type="html"><![CDATA[]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/27/%E6%80%BB%E7%BB%93/Spark%E6%A0%91/"/>
      <url>/2023/04/27/%E6%80%BB%E7%BB%93/Spark%E6%A0%91/</url>
      
        <content type="html"><![CDATA[<figure class="highlight plaintext"><table><tr><td class="code"><pre><span class="line">graph TB</span><br><span class="line"></span><br><span class="line">A([根目录])</span><br><span class="line">B([tzxy])</span><br><span class="line">C([jk])</span><br><span class="line">D([wulian])</span><br><span class="line">E([xinguan])</span><br><span class="line">F([22jk3+2])</span><br><span class="line">G([220326104chx1.txt])</span><br><span class="line">H([220326104.html])</span><br><span class="line"></span><br><span class="line">A--&gt;B</span><br><span class="line">A--&gt;C</span><br><span class="line">A--&gt;D</span><br><span class="line">A--&gt;E</span><br><span class="line">C--&gt;F</span><br><span class="line">C--&gt;G</span><br><span class="line">C--&gt;H</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>4.26</title>
      <link href="/2023/04/26/%E6%80%BB%E7%BB%93/4.26/"/>
      <url>/2023/04/26/%E6%80%BB%E7%BB%93/4.26/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="47b38ec66f100b21cff913b2c39b255c431a136008514c0e75bb864b8b754359">5ed54878ffbf9e892b148842ee1d877b5a4b688e0b9ba37886d6fb89e67a5ba3a3f9bff563f1051d4cb862cda7ed5ace19e20abfbb7dc07961a21dd3a9cec088f0ac28b9827cc84ac55e61d96bbabadddcabd7175ed66559748c8fb9341136b525a20e8268e797a8bbd656cb0b3b3ffc4ad0c16d29dcb1df8fda514e946d618366ac54f87cd7ddff1785cdbea39454c4ca631362599a0856ae430b3384c82e5b8bd7dce94c04b714487a9ae486d0dbef19525d455677bf966152e0621309a7c0101205fc2cf87cef48cf9e660ea812e12a304a88b976eadda12b9cdc76211cd5b6b35ee7a12b3ddb3131d33ede1160daaed1d81cc74b1f27aa9a3655644a9f2e578ddbbc79b30a8f40e08fa8ec109f4f930f1eb8e5e60945bf9a43dd3e40d187915fc2d1b84e3b13527c8723c01e959fac553773476387e21f501373cbadbc8682153a1576db3890e9fcb0fc7847f037baddbf6c64f53f556398692be2938ce1ee9dbeaf0f9961c01df4509a449514309e161a9ff7854ec28c082b224ab2e2cc7a32cf6f41e6bc8b90b7b9864eb96c0f577340a3d3c79deba33f49ebb625987f7327f0549c1428945136aa1b33d3b3c5d8ac40e4c6b0185eeef27366655e5177fc625a552f2a2c0e25787c55f62e0186bd5a60a464f392a021a828d8b2a3f47569b3f3292e0003a4fb8b5274bbc01f8be38f65dcee6244328dde7705e9055fc943f3448d207d1d75d70b862542484d935d31ca58fe6a9511961674d98016a876f2fff308e7a049b44c830ec03d34180c390ee3d5de7222cd837e0d7ef4ddef34659546f545ae6827dd23b41d12f032409b340fc744804f405d6adf9ccc9e6904438ff92b641fecad195f2712fd239cddd6e89175fcae8353e2ead3a275aabf99ad0b0eb0d8721db4303c0a05f40037f3747e2858d459628e94cac62e77517c9d3bed2455f49a44646e7b0baf682b15b8be83780eacb5358ed99476eb3696816cf2a0b0918ab9f22399d33025d5cb2638057c1f8e0b98726a729c9aacac10b83a7fad87392bdc95edbf10f2af8688940a35ed49e209d013e9cdbd448d722497e4e87ba4f51fce06d9f555a6564bc058b3e016d4ea0665c200a665eea234212f310aac22366ebb3e3411c8b2cef348c9f7321609205e3abf8e95c4acca3966bd324a95eb27ef9400ad845b3dcb80d5bd4ecfb2f765f32fe19bafaa3d60522af8b5b9e8c2f9a618576a35dc79f27d2c3524129176b524344ef47c111ca2167269ac8570b1a8e8c0d59e47deeef744accaf31a77c85d73cc2b2d32829dbc0443c6d06310d2b1012a0cb0064b334e345e3615040bbc68413360928d75f71e6797502df23db0c87d2c9c78511814493f5a1c3d0a91d5680cb8ef5cb62921b378d474ab6c7793ce0829362290e874ad96f1f769c409462310fdb40d7358c974d5a12ed8cafa9e3befbfd2956220c4839f6e8e62bacc0240ef1336ba13a3d414a985126042470f4e611191a3ec1e2019d5d584dcddce077325d9b1f466244edcec60e51e47e9126185b1ad0b376636de48e2f4dbf8a5efb8b55678e8db8afc08fb7144754906f84284d28cce30906d702fb20451d73b0ea6e3ed88faa6c994f3733066ad6e61f50ab6c76483be2636aaa2661dca3cb261a5556dabf895120ff7c8ac859caf0407a633bd51df8ce87bcbae627236f4a7fee39731516de38c34ca1666add400d9cabeae835db6e35de657f7dfe24b9fa6a3313e0a316dbb11f5e743440ebc2d983f1f24c23a54839c51610775cf08cf895d1d27e1ad5ac62664a6827f915b793d2c7d38dd1cbd1ae67690fce214b6282a18ed6b8578dcc052caf49f03c4f231b618e4c9b0d751bc20db7cbae078675aca4f64f6eb3f8b042788c13fa5bb00b94dd69834fc432ebc5418054b79630eb608fca919d880565dc8fbdf1df7f07186a5d5323204a6b1ed17c0888666d68ed6c4b49fc54d644cef1cc4191c61495379a812427f8e62bf14b33d23daaad86747f1c5efb89ab9ef06b8b285a8f1372cdaa93f9d5d8215018222d79363744f1f</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">生日。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4.25</title>
      <link href="/2023/04/25/%E6%80%BB%E7%BB%93/4.25/"/>
      <url>/2023/04/25/%E6%80%BB%E7%BB%93/4.25/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="209f6ddf2ec46106ee0a4870af20425b66c8dbfa744ee749f4ec68e5d9b4a090">5ed54878ffbf9e892b148842ee1d877bf1f5d448268e20d4a0899a9a19a874879249d6aefc31ffd387fd8892581ce02fdf6202c68aa2ed296c67c472fbfa2dba97f2cfcf2974972295a00b641c9483222e14463ea83e131c2f15bd2d7a8405208e886ed9c7348bf7b9a558fd7a0f916928ec7e5a1410b90409c277bcb7e282bfa4f0b83ad32d59b4daf8aa60e3f8e45b009bb1e3039dcc8b40a56703a09951a5b32792cbce05308c300e050f62237999b15456bc09731753925707d7b3e61e1cd544699b1624f734b1b2f9e353f3fea6d36bacac49a64a5ea438bb6fbb6363cd3922502726354ad9773aff1b599bc4f1c3f89d748f426914a407f72a1fe2b4df94baaba4ac6bb5746d554b3e5ecf7b87d0ec77a4e44ec7770d2e598d4888bda4516b6b0a513deb5bfd766813ec31881e97df609612d24a72d1add04883465dbde1e9095225a951c224f4429f5de7589ab0d513b672ba5cf600c6489870ec33893b955bc3d3d952c81a6e05a6f8af41778de135c033517b8c68ee01a9a2473e1adfc5ba9ed65d8564f723e776bb1de1755d95058b14780015805ad1329ecabe0fabcfbfcbb405b3ad2a456fa1928c3e4d437999c20b824ad05be6bc4721b61b76619943d3e5031a996d95a5d3899c3f734839c0467475822dede8f2933b08621de7380e85bef8568042e64e5ab9d125f0208ade67244294311b22ee8820ce3c17ac73793edb92ec9a462ca5ac05c9d98491294b63298b6249ebbde822d289472bd0b621931b89734490dd6277d3608312d6a7ba3f0791d704e6f617d9dc4f2c0d755b483690521cd0c12e953faad69fa9add9927ac013a8d39829130997c6c24fb4872a835f670739bb3cab7792a75e53ff1b4d23e95a2337ca7270a770fdcb84e1ce7691e0e3e7582aa512937b0fe6015803c136bcb42a322979fb5a8bcedaed918eb3137d1ad1852a2de113734aff4b332f49b96d151129aa0d7e1458d1fe995a07151c2bc5a008934d151ec80292f9a78755dcf9bd46278d34c4082a79e34029be3f1162e2319cb05df3d5d6637f476fa5ffd3946160563591da082f80f6ea6a7d4e77af4a9954aac44a2e8447f9b04f9e413945bd5f5aae4c3db984994f2f3965f2f21f5a1e762447d4ffaa2705c49509826ba1c5ef136c96e73028ddcef1</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">生日。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4.18</title>
      <link href="/2023/04/18/%E6%80%BB%E7%BB%93/4.18/"/>
      <url>/2023/04/18/%E6%80%BB%E7%BB%93/4.18/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="c0a91c9270e027becd6e50c3256cf9a64e9fa3bd07a0071e19ab096aa66586b9">5ed54878ffbf9e892b148842ee1d877b876c282a176a95c735741666a82924aaf7bd0ce5ea0df0b49c68496759a3cc52e0d6120630147883b498e33461e5d67c0f21c13ea67b1dc0ede9fce34c228d50ddcafc07dbf4d99490188fae16c1f42375bc2e281220e1c0db4fa8d17c40e2b98ddab7f45283ad4fb8edc996a944bad424073044617d419d2e55e8e4ffa71d8f6c0da4365b6f4b481b1056962dd8bd42a3fc9bd5449252db8eeec1e315a72fa548d3197fa0a9a16b7c83ec30c6e9b280bf889b5654542ed7156f2fd084423ed2702b443d01442607141f955160bbdfd140e1dbfb6efa3c1d0cb037df40c2b6d436ba90f821ebef6764e758199f48fbc07dcdbeafebb55df4caa8855eaf021af535e821acf19071bf71c560fa021f3e1538a399bd13d0a40f8d54c74001949b025c4737a0c68c8b3633d531b32a95e801172ce4bb76e04f6927208fc36b0775af725a0fd3fa239acbf89255bc908839e68faaf5295531f3da77d63820702205d62919987a790bf7c5c87cbf30645c1773c3fa3c882693dd7b5c02ed9da7b0b28fc61f6dbb7a600ff6a017c93949a7b6159fadebd9b2122ce049517f2b66c6ec92bc5f76ad9c6dff221619643fb67eace32e7596f154335d7659446822a755ab8b9b35458dfc8fe9fe8f0d16fe9bafb128dd98c62bb7ae1c4fa94545a3e52b2ffb32724c9bf80dcc330176c2fb35d9c186fc0bc0c1b9d671d6432915e20f6c74faf91a3c7cab10279825e7a3bd2e7953dcd30e890228867e9b6f88c0309391c0c139a22d0b18d169c0cd274ed02650908a1fd96302e342c9064d7860a274ad668137742aa06e6d3ed2d7522fc4885022d1e4a482e57c32e07ee73bd1ae33b65b92fbc827bf8454f9faa0ac8531e46d297186763d0f32664cb56f4db880adf6159d811ebf8ebd46d94c4800c87e6af063c5f083582d6fb8463e7607fdd4b61e0fe15c841e20d1508a4342b56705cb129e5b039c4840deb2fc5856e54cfa4ab5f38b39d96f36dff290d51dbf768d7970a70e22c98bb3c8386eb314b2c0358f6adee8676195acc1e59b6aa180e7d0b31baa6de60c15521110ebd59ac9b52b74e9583cd6e26b3bc91596952ffcba54f98eb3897242109351d0040b98d972ef306cf15047d8eb18ed10209ac93690bce6a26560bfd50b1c37ee1108e5209ad5c9daed50dcf8a5410aa81be321792e174ea7327bff45b773918dfeee5761a5b6c732e8dcb1df59405524a909320522e66dbf323cbc9784b94bda6bab606f48edabfbd5f96098c9b45d58104f7ffab4b797516b412d6fb3f8912c45203293b26f027e463e5c1e1fcfd56a3a8f7d1b2da3468fb7fd6927ab205c0d5f821003e74c29f4dc9e39e7cf8f33ea4523a11ceaf44a89c90c353a097cccc88f397845a496df1a5f977643ed7131fb42298e7cfe7d235074b04022698ed55ef3d6d32a5c746b4013694d6ca02863047f2c7d943486e31e3123d2b8372993e2008e8e788cf1dbfdcc4ad14b20bfe95670e513c233980c627134f6dd3aec2836ebd3138b55e9363b22eb</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">生日。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>4.17</title>
      <link href="/2023/04/17/%E6%80%BB%E7%BB%93/4.17/"/>
      <url>/2023/04/17/%E6%80%BB%E7%BB%93/4.17/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="ff983c96c4f728e7d03633d3a0cb9712ffb03d9bcbdbfc10a12540e0af867565">5ed54878ffbf9e892b148842ee1d877b294a2af2b56c514adad5a033ea1f249efbf02e4ea16a6620d823bffbe7fe0b877fb36d019241c4643dbfb7c5da781630b13c06843443b07e1a95ce2b1ea896fd7655e54c50f272cd8bed68eb3ab62ff493fb9c9ce760fc45a693b0cf7085bf0977bc1fa4187552272ed19d60b09ab57ed10a1dfd7413e8a9023e09e4947064a08620d37183f77460e4f7e645b02a6b94d1928eeccddf360228cc4310721cddf0ef83ab816a63588bd49f48ec9d4906bdc80664bc0f4b834d11ef2f9309a1ff6e8752289f973a438cd1d68c3f0266dedb848ce4ac9cdce8cae1c896b952ee131276334221d5a1d699dbe068e0d4918500775bd4350a9db27ad6fb81ea7807660cbc7bac0100e6b9dc9e1b9f70332615839602bfc5d8e38c4cce026a23db0b008c93d4447fef6c19012df5731aa1474fb63302214522f7b1916b1a5bb0aabc85d7ffc2dbe92edb755772fd1607f1611e0f44669898d892f6c7cf508d66d4dba599f269506fe74f095cb50d3ea519e90093e62e15a8e872a6bc5b23c85d16019e726ecf5496caf605e02ba65c249504fef0079f06b8c22f3d2e113f26509a0da72066126054c7c9c17a16b4cbcddac6873a7f3bc1ddf9d590527d8e8629e3126b2214bba7615c96cd2b888bf2c8bb5be40662236060c2e8540a1d25635a5e29af1d4048acf4a2542d979301d289fff541fe343229ac5ec72dc00223cef33b1f4786177cd7f5c130a6cd18e0f86e5ef84e1b5653ab5a41bc5d11526bde0634151d216e0b4630098a3a8fb63e63b47418e5dcc68ccd4bf288311cdb808018ee747026a32ca6d68c052bdbce3d9ce6e91222c97f91447f5c3fc0f68c2ac4c2a69fa521df9dd0e22b884f1a9a936b226672f0df97d11c956fe61daa1de13b3d9eddf3650a8fd2c0670157df5250341cd2712e7be64f8bb683e2675dd08f8167d099bd7b49abdefb8f6fde11eb08d7b1a5545d6169898b45003d165f3a6a6a31dfdd66adab2a833f8873f4096adf8aa6631a34871e863b4b9c5e405ae93152afd137d7f072ef0677beddc4421c6af68b4c900a4f5ad5b442c87d6469d4bbd4919f63335f9677a55c7361b644a95abdbf4507efd57741d8b7452ec0d9a8c96ff32654ef4847bcfa71e88f71daa30aeb457bf7061d97ab956c0e273886fa9f0d9fa26cdc1b40063e8c7b1207c7e7767157369f0de58914954e0fe6046f5ba76f97544e164e2f833fe79d68427feadbc5493894f8398935e6337845133ff7729c4a5edd4e30e207179e51f3fd92d4d9a163551fc3bb41cd6b8b1f41eef79685cdece5fdd6ebf745b869d2b4aa614b00cdaba725383ce32e989a0fa3457bd57df323093940c965c66c78d66ac0fbc703a05a1858bd2560d57596906ebbe56abf7980b7d0fa2b6e9a2c21eb6475e3b221178fc24c8231cdce3c43a975c1789e445e772dc8f0dbab91ed63952a1cea0af9a78c04f8c09667ba4cad7479b6665d7cc8ba395b767500871cfdcd87082c02b1a05083f028544ce4f28414d1abf4fec2591bd3aafc372ab169c7d5b94db787b3d4b667fadd8cac073da202fa6ac01266f33a58149ace0d92f390763126a5857283afb22786a5946eccf2362d076a4dab5f4ef57564993d5579cb2f60c25f7df1f65b673fbdaab5038c0a4be994166983bdbdd6b388895aae066fb8aa3d5051e7c4e69f305ef7ac7dce5146ffd5735684371b150125e7e8dd06b8a11eb67e7cf8055e65256decc5255dacd8eb7593a749dd99278a96ab02efc221fc608ebd0708030931ffaa57e1c2a7992dae46d166822f8fad887861ac181661dcdc9a7f7808f35419e54adb433f528eb4c9eccb428aa4adc4f27ffc5262e8fb275c1980353768e0ffec2ee00d55d4781f117f2709c78b38d0efcdb51ea05a989d44f2ebd160aa46e0959af007423a93f053b413b375331721a52b3f39712448cb7d9167e5d31673499ee5dd4dd6d44c2e7796f5c727ced6f80b30206ae2eb3dda837e7ee8007f09eb6a5355a82201e4a197d1a4cfa16f03ff5d4f9a6953d35874709e4cc124e5e23251d8a46203f9bb85fa07c10d4c5d840b6218cb2f5fcb403a319b99d32950cfe8a9396c7605bd1f30c318783e7f537c2da9d165d61b125c285f2fd9c62c547e1fb514a72de1f8117d53b3d7350087fa871ac950666fde72b976c4005e6265e39b8a5ba8387ded0c1a69a2f47e711b6c39b39151ba1a01347aad380618e02d0432801015521b138ad3a56dd3db6db53bbf50e8fc80187c573ea0ad643f78026646767c552b3827be206d1054c835dd650b805093dac81e18d0ed8cc2ede76550689cfe435301ef5322e4918a9be3352a15058a4ac2c92df7ba16bb190eb82c19a0bf9c75a7e0f4aced5b18cc90591031e610464e7d21a6b5839872fca569a8fa5abf5932a537621f6e3a0d27baa0446c300148c8c0065ae1e7fb9c454a0d69eccb47191eca52eb75ce5dce13f60570d6316cb807d2955f4456bbf8e8981f150099c2b38db02b4b7d5dbc66e1e69afda16abff5bfeae6c7d3926f96876170e3142f8ccf925f3a61f7e77960eb47e3d19cf1e89058749002edd864e1d91123a33bdf4560f9498585d3a9dacd7663fcb5efc1e2d04263723b2f4630cfef3906f312a2af1870f13465c5f2aacc0aed961449c97db12d20a963e4d16b7459c2bc041dc88d8160dfa91fe16afec47282dd36c63e6df3679a19bddd9dc6eafeffc63c12a30a1e899139beea68a7c76daf14b25185cfd5313b7926567c52083ca4d6ae2b6ff334fdb11ec80fa9f81716db9b23d4f9a657d1d6fde12633a05f2b5fa4deaeed05939a0a4a91c77d9a8c4f6d235f623d6a987414c2f948f29df83ba0407a958a27b902</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">生日。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/17/408/%E6%9D%82/%E9%9A%8F/"/>
      <url>/2023/04/17/408/%E6%9D%82/%E9%9A%8F/</url>
      
        <content type="html"><![CDATA[<h3 id="哈哈哈哈哈哈哈哈，小一言，我来喽"><a href="#哈哈哈哈哈哈哈哈，小一言，我来喽" class="headerlink" title="哈哈哈哈哈哈哈哈，小一言，我来喽"></a>哈哈哈哈哈哈哈哈，小一言，我来喽</h3><blockquote><p><img src="/wxyy.png"></p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>计组-章二</title>
      <link href="/2023/04/17/408/%E8%AE%A1%E7%BB%84/%E7%AB%A0%E4%BA%8C/"/>
      <url>/2023/04/17/408/%E8%AE%A1%E7%BB%84/%E7%AB%A0%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<p>为了便于运算，带符号的机器数可采用原码、反码、补码、移码等不同的编码方法，机器上的这些编码方法称为码制。<br>了解码制前，需要了解一下什么叫机器数和符号位，什么叫真值。</p><p>1、机器数和符号位<br>一个数在计算机中的二进制表示形式，叫做这个数的机器数。<br>机器数是带符号的，在计算机中用一个数的最高位存放符号 正数为0 负数为1。</p><p>2、真值<br>因为第一位是符号位 所以机器数的形式值不等于真正的数值。例如有符号数 1000_0101，其最高位1代表负，其真正的数值是 - 5 而不是形式值 133 (10000101转换成十进制是133) 。所以 ，为区别起见，将带符号位的机器数对应的真正数值称为机器数的真值。</p><p>3、原码、反码、补码、移码<br>为了便于运算，带符号的机器数可采用原码、反码、补码、移码等不同的编码方法，机器上的这些编码方法称为码制。</p><p><img src="/ma.png"><br><img src="/ma2.jpg"><br><img src="/ma3.png"></p><h3 id="原码"><a href="#原码" class="headerlink" title="原码"></a>原码</h3><blockquote><p>原码就是符号位加上真值的绝对值<br>即用第一位表示符号 其余位表示值。比如如果是8位二进制: +1 &#x3D; 1000_0001</p></blockquote><h3 id="反码"><a href="#反码" class="headerlink" title="反码"></a>反码</h3><blockquote><p>正数的反码是其本身，负数的反码是在其原码的基础上符号位不变，其余各个位取反。</p></blockquote><h3 id="补码"><a href="#补码" class="headerlink" title="补码"></a>补码</h3><blockquote><p>正数的补码就是其本身，负数的补码是在其反码的基础上+1</p></blockquote><h3 id="移码"><a href="#移码" class="headerlink" title="移码"></a>移码</h3><blockquote><p>不管正负数，只要将其补码的符号位取反即可</p></blockquote><h3 id="整数小数都一样哦！"><a href="#整数小数都一样哦！" class="headerlink" title="整数小数都一样哦！"></a>整数小数都一样哦！</h3><p><img src="/zhuanhuan.png"></p><h3 id="对比"><a href="#对比" class="headerlink" title="对比"></a>对比</h3><p><img src="/zhengshuxiaoshu.jpg"></p><h3 id="BCD码："><a href="#BCD码：" class="headerlink" title="BCD码："></a>BCD码：</h3><blockquote><p>以四位二进制数为一单位来表示一个数。例如：十进制数10的BCD码为0001 0000；显而易见后四位的0000 表示的是十进制的个位，0001则就是十位了。十六进制转BCD码也是同理。</p></blockquote><h3 id="通常的两位BCD码转换："><a href="#通常的两位BCD码转换：" class="headerlink" title="通常的两位BCD码转换："></a>通常的两位BCD码转换：</h3><blockquote><p>BCD码转十进制：DEC &#x3D; BCD &#x2F; 16 * 10 ^ 1 + BCD % 16 * 10 ^ 0 ；<br>详解：先将BCD的前一位提出BCD&#x2F;16，再提出BCD后一位BCD%16。最后将两位数转十进制。多位BCD码同理。<br>十进制转BCD码：BCD &#x3D; DEC &#x2F; 10 * 16 + DEC % 10 ；同上分别提出高低两位，做BCD转换。</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 408 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计组; </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/16/408/%E8%AE%A1%E7%BD%91/2%E7%AB%A0/"/>
      <url>/2023/04/16/408/%E8%AE%A1%E7%BD%91/2%E7%AB%A0/</url>
      
        <content type="html"><![CDATA[<h2 id="信噪比s-x2F-n-单位分贝-为什么还要取对数10lg-s-x2F-n"><a href="#信噪比s-x2F-n-单位分贝-为什么还要取对数10lg-s-x2F-n" class="headerlink" title="信噪比s&#x2F;n(单位分贝) , 为什么还要取对数10lg (s&#x2F;n)?"></a>信噪比s&#x2F;n(单位分贝) , 为什么还要取对数10lg (s&#x2F;n)?</h2><p>因为信噪比有两种表示形式：</p><blockquote><p>数字形式表示。也就是一般的数值，比如噪声功率权为1，信号功率为100，则信噪比为100&#x2F;1&#x3D;100。<br>以分贝形式表示，同样还是上面这些数字，则以分贝形式表示的信噪比为：10lg(s&#x2F;n)&#x3D;10lg(100)&#x3D;20 dB<br>两者的区别在于，前者结果（一个数值）是没有单位的，后者结果必须后面加dB，代表分贝。两者数值等价。</p></blockquote><p>采用分贝表示的原因是，很多时候，信号要比噪声强的多，比如信号比噪声强十亿倍，如果用数值表示的话，1后面有9个0，很容易丢失一个0。如果用分贝表示，只有90dB，要简单得多，而且不容易出错。分贝对于表示特别大或者特别小的数值极为有利，这种表示方式在电子通信领域用途很广。</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/16/408/%E6%9D%82/1/"/>
      <url>/2023/04/16/408/%E6%9D%82/1/</url>
      
        <content type="html"><![CDATA[<h3 id="中国的时区为什么是Asia-x2F-Shanghai，而不是Asia-x2F-Beijing？"><a href="#中国的时区为什么是Asia-x2F-Shanghai，而不是Asia-x2F-Beijing？" class="headerlink" title="中国的时区为什么是Asia&#x2F;Shanghai，而不是Asia&#x2F;Beijing？"></a>中国的时区为什么是Asia&#x2F;Shanghai，而不是Asia&#x2F;Beijing？</h3><blockquote><p>原因是1949年以前，中国一共分了5个时区，以哈尔滨 （ Asia&#x2F;Harbin）、上海（Asia&#x2F;Shanghai）、重庆（Asia&#x2F;Chongqing）、乌鲁木齐（Asia&#x2F;Urumqi）、喀什（Asia&#x2F;Kashgar）为代表——分别是：长白时区GMT+8:30、中原标准时区 GMT+8、陇蜀时区GMT+7、新藏时区GMT+6和昆仑时区GMT+5:30。它是1912年北京观象台制订，后由内政部批准过。而且从国际标准本身的角度来看，北京和上海处于同一时区，只能保留一个。而作为时区代表上海已经足够具有代表性，因此其维护者没有足够的动力做出改变。所以目前还没有Asia&#x2F;beijing。</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/15/408/%E7%B3%BB%E7%BB%9F/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/"/>
      <url>/2023/04/15/408/%E7%B3%BB%E7%BB%9F/%E8%83%A1%E6%80%9D%E4%B9%B1%E6%83%B3/</url>
      
        <content type="html"><![CDATA[<p><a href=""></a></p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/15/408/%E7%B3%BB%E7%BB%9F/%E7%96%91%E9%97%AE/"/>
      <url>/2023/04/15/408/%E7%B3%BB%E7%BB%9F/%E7%96%91%E9%97%AE/</url>
      
        <content type="html"><![CDATA[<h5 id="阻塞态P57就绪态，进入情况，内核态和用户态对此区别又在哪（整合一下）"><a href="#阻塞态P57就绪态，进入情况，内核态和用户态对此区别又在哪（整合一下）" class="headerlink" title="阻塞态P57就绪态，进入情况，内核态和用户态对此区别又在哪（整合一下）"></a>阻塞态P57就绪态，进入情况，内核态和用户态对此区别又在哪（整合一下）</h5>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/13/408/%E7%B3%BB%E7%BB%9F/%E7%AB%A0%E4%BA%8C/"/>
      <url>/2023/04/13/408/%E7%B3%BB%E7%BB%9F/%E7%AB%A0%E4%BA%8C/</url>
      
        <content type="html"><![CDATA[<h1 id="原语（原子语言，不可分割，不可中断）"><a href="#原语（原子语言，不可分割，不可中断）" class="headerlink" title="原语（原子语言，不可分割，不可中断）"></a>原语（原子语言，不可分割，不可中断）</h1><blockquote><p>是操作系统或计算机网络用语范畴。是由若干条指令组成的，用于完成一定功能的一个过程。primitive or atomic action 是由若干个机器指令构成的完成某种特定功能的一段程序，具有不可分割性。即原语的执行必须是连续的，在执行过程中不允许被中断。</p></blockquote><h1 id="分类"><a href="#分类" class="headerlink" title="分类"></a>分类</h1><blockquote><p>计算机网络中也有“原语”一词，它与操作系统的“原语”概念不同。服务原语是指协议中的下层协议通过接口为上层协议提供某种服务而发送的原语操作。</p></blockquote><h1 id="原语分为四类："><a href="#原语分为四类：" class="headerlink" title="原语分为四类："></a>原语分为四类：</h1><blockquote><p>请求（Req）型原语，用于高层向低层请求某种业务；<br>证实（Cfm）型原语，用于提供业务的层证实某个动作已经完成；<br>指示（Ind）型原语，用于提供业务的层向高层报告一个与特定业务相关的动作；<br>响应(Res)型原语，用于应答，表示来自高层的指示原语已收到。</p></blockquote><p>————————————————<br>版权声明：本文为CSDN博主「顺其自然~」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/fuhanghang/article/details/83581477">https://blog.csdn.net/fuhanghang/article/details/83581477</a></p><h1 id="线程的实现可以分两类：用户级线程，内核级线程和混合式线程。"><a href="#线程的实现可以分两类：用户级线程，内核级线程和混合式线程。" class="headerlink" title="线程的实现可以分两类：用户级线程，内核级线程和混合式线程。"></a>线程的实现可以分两类：用户级线程，内核级线程和混合式线程。</h1><p>用户线程<br>用户级线程是指不需要内核支持而在用户程序中实现的线程，它的内核的切换是由用户态程序自己控制内核的切换，不需要内核的干涉。但是它不能像内核级线程一样更好的运用多核CPU。</p><p>优点<br>（1） 线程的调度不需要内核直接参与，控制简单。</p><p>（2） 可以在不支持线程的操作系统中实现。</p><p>（3） 同一进程中只能同时有一个线程在运行，如果有一个线程使用了系统调用而阻塞，那么整个进程都会被挂起，可以节约更多的系统资源。</p><p>缺点<br>（1） 一个用户级线程的阻塞将会引起整个进程的阻塞。</p><p>（2） 用户级线程不能利用系统的多重处理，仅有一个用户级线程可以被执行。</p><p>内核级线程<br>切换由内核控制，当线程进行切换的时候，由用户态转化为内核态。切换完毕要从内核态返回用户态。可以很好的运用多核CPU，就像Windows电脑的四核八线程，双核四线程一样。</p><p>优点<br>（1）当有多个处理机时，一个进程的多个线程可以同时执行。</p><p>（2） 由于内核级线程只有很小的数据结构和堆栈，切换速度快，当然它本身也可以用多线程技术实现，提高系统的运行速率。</p><p>缺点<br>（1） 线程在用户态的运行，而线程的调度和管理在内核实现，在控制权从一个线程传送到另一个线程需要用户态到内核态再到用户态的模式切换，比较占用系统资源。（就是必须要受到内核的监控）</p><p>关联性<br>（1） 它们之间的差别在于性能。</p><p>（2） 内核支持线程是OS内核可感知的，而用户级线程是OS内核不可感知的。</p><p>（3） 用户级线程的创建、撤消和调度不需要OS内核的支持。</p><p>（4） 用户级线程执行系统调用指令时将导致其所属进程被中断，而内核支持线程执行系统调用指令时，只导致该线程被中断。</p><p>（5） 在只有用户级线程的系统内，CPU调度还是以进程为单位，处于运行状态的进程中的多个线程，由用户程序控制线程的轮换运行；在有内核支持线程的系统内，CPU调度则以线程为单位，由OS的线程调度程序负责线程的调度。</p><p>（6） 用户级线程的程序实体是运行在用户态下的程序，而内核支持线程的程序实体则是可以运行在任何状态下的程序。</p><h4 id="某操作系统支持内核级线程，且处理器采用时间片轮转调度算法。该系统现有进程A和进程B，且进程A拥有2个线程、进程B拥有100个线程，那么进程A执行时间一般应为进程B执行时间的（-D-）。"><a href="#某操作系统支持内核级线程，且处理器采用时间片轮转调度算法。该系统现有进程A和进程B，且进程A拥有2个线程、进程B拥有100个线程，那么进程A执行时间一般应为进程B执行时间的（-D-）。" class="headerlink" title="某操作系统支持内核级线程，且处理器采用时间片轮转调度算法。该系统现有进程A和进程B，且进程A拥有2个线程、进程B拥有100个线程，那么进程A执行时间一般应为进程B执行时间的（ D ）。"></a>某操作系统支持内核级线程，且处理器采用时间片轮转调度算法。该系统现有进程A和进程B，且进程A拥有2个线程、进程B拥有100个线程，那么进程A执行时间一般应为进程B执行时间的（ D ）。</h4><p>A.50倍<br>B.100倍<br>C.1倍<br>D.1&#x2F;50</p><h4 id="某系统不支持内核级线程但支持用户级线程，且处理器采用时间片轮转调度算法。该系统现有进程A和进程B，且进程A拥有1个线程、进程B拥有100个线程，那么进程A执行时间一般应为进程B执行时间的（-B-）。"><a href="#某系统不支持内核级线程但支持用户级线程，且处理器采用时间片轮转调度算法。该系统现有进程A和进程B，且进程A拥有1个线程、进程B拥有100个线程，那么进程A执行时间一般应为进程B执行时间的（-B-）。" class="headerlink" title="某系统不支持内核级线程但支持用户级线程，且处理器采用时间片轮转调度算法。该系统现有进程A和进程B，且进程A拥有1个线程、进程B拥有100个线程，那么进程A执行时间一般应为进程B执行时间的（ B ）。"></a>某系统不支持内核级线程但支持用户级线程，且处理器采用时间片轮转调度算法。该系统现有进程A和进程B，且进程A拥有1个线程、进程B拥有100个线程，那么进程A执行时间一般应为进程B执行时间的（ B ）。</h4><p>A.50倍<br>B.1倍<br>C.100倍<br>D.1&#x2F;100</p><h4 id="要理解上面两道题，先简单看一下这几个重要概念（更加细节不赘述，其他博客更清楚）："><a href="#要理解上面两道题，先简单看一下这几个重要概念（更加细节不赘述，其他博客更清楚）：" class="headerlink" title="要理解上面两道题，先简单看一下这几个重要概念（更加细节不赘述，其他博客更清楚）："></a>要理解上面两道题，先简单看一下这几个重要概念（更加细节不赘述，其他博客更清楚）：</h4><p>用户级线程：用户级线程，说白了就是应用程序的所支持的线程，一切有关线程的工作都是由应用程序完成，内核意识不到线程的存在！用户级线程对于操作系统是不可见的，因此无法调度到内核。每个进程的线程只在用户空间可见。<br>内核级线程：线程的所有管理工作都是由内核来控制的，线程对内核可见，一个用户线程被映射到一个内核线程。<br>时间轮转调度算法（暴力理解）：5个和尚（进程）排队打饭，5个人的饭量为2，3，1，4，5（进程执行完所需时间），打饭的勺每次能打3饭量（时间片），规定每个和尚只给一勺，可多不可少，如果够了就走（进程执行完毕，结束），不够就排到队尾等着打下一勺。这里每个勺能打3饭量就是规定的时间片，进程来回排队就是时间轮转度算法。<br>题目解析：在上面两题中，A进程有2个线程，B进程有100个线程<br>对于支持内核级进程的情况：内核能看到进程中的线程，时间片又都是一样的，所以2&#x2F;100&#x3D;1&#x2F;50，选D；<br>对于支持用户级线程的情况：内核只能看到进程，所以就是 A进程 VS B进程，1V1，所以选B<br>————————————————<br>版权声明：本文为CSDN博主「fanjun1997」的原创文章，遵循CC 4.0 BY-SA版权协议，转载请附上原文出处链接及本声明。<br>原文链接：<a href="https://blog.csdn.net/weixin_45913922/article/details/116073235">https://blog.csdn.net/weixin_45913922/article/details/116073235</a></p><h3 id="进程控制块，Process-Control-Block-PCB。"><a href="#进程控制块，Process-Control-Block-PCB。" class="headerlink" title="进程控制块，Process Control Block, PCB。"></a>进程控制块，Process Control Block, PCB。</h3><blockquote><p>操作系统管理控制进程运行的信息集合，操作系统用 PCB 来描述进程的基本情况以及运行变化的过程，PCB 是进程存在的唯一标志。<br>进程的创建：为进程创建 PCB。<br>进程的终止：回收其 PCB。<br>进程的组织管理：通过对 PCB 的组织管理实现。</p></blockquote>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>计组-章一</title>
      <link href="/2023/04/12/408/%E8%AE%A1%E7%BB%84/%E7%AB%A0%E4%B8%80/"/>
      <url>/2023/04/12/408/%E8%AE%A1%E7%BB%84/%E7%AB%A0%E4%B8%80/</url>
      
        <content type="html"><![CDATA[<h2 id="并行处理技术-概念"><a href="#并行处理技术-概念" class="headerlink" title="并行处理技术-概念"></a>并行处理技术-概念</h2><blockquote><p>并行性是指在同一时刻或同一时间间隔内完成两种或两种以上性质相同或不相同的工作，只要在时间上互相重叠，都存在并行性。计算机系统中的并行性可从不同的层次上实现，从低到高大致可分为：<br>（1）指令内部的并行：是指指令执行中的各个微操作尽可能实现并行操作。<br>（2）指令间的并行：是指两条或多条指令的执行是并行进行的。<br>（3）任务处理的并行：是指将程序分解成可以并行处理的多个处理任务，而使两个或多个任务并行处理。<br>（4）作业处理的并行：是指并行处理两个或多个作业。如多道程序设计、分时系统等。另外，从数据处理上，也有从低到高的并行层次。<br>（5）字串位并：同时对一个二进制字的所有位进行操作。<br>（6）字并位串：同时对多个字的同一位进行操作。<br>（7）全并行：同时对许多字的所有位进行操作<br><a href="https://blog.csdn.net/lizhenyuan/article/details/4058330">链接</a></p></blockquote><h2 id="主频-x2F-MIPS-x2F-CPI-x2F-CPU时间"><a href="#主频-x2F-MIPS-x2F-CPI-x2F-CPU时间" class="headerlink" title="主频&#x2F;MIPS&#x2F;CPI&#x2F;CPU时间"></a>主频&#x2F;MIPS&#x2F;CPI&#x2F;CPU时间</h2><h2 id="浮点数操作速度指标："><a href="#浮点数操作速度指标：" class="headerlink" title="浮点数操作速度指标："></a>浮点数操作速度指标：</h2><blockquote><p>MFLOPS</p></blockquote><h3 id="p17"><a href="#p17" class="headerlink" title="p17"></a>p17</h3><blockquote><p>19<br>#运行时间&#x3D;指令数*CPI&#x2F;主频()<br>PFLOPS (千万亿次10^15)</p></blockquote>]]></content>
      
      
      <categories>
          
          <category> 408 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 计组; </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/2023/04/08/content/"/>
      <url>/2023/04/08/content/</url>
      
        <content type="html"><![CDATA[<p>##这是一个markdown基本使用语法</p><p>hello</p><p>\l $\lim_{x\to\infin}f(x)$</p><table><thead><tr><th>小明</th><th>大明</th><th>姚明</th></tr></thead><tbody><tr><td>1.5</td><td>8</td><td></td></tr></tbody></table><p>添加<a href="https://markdown.com.cn/cheat-sheet.html#%E5%9F%BA%E6%9C%AC%E8%AF%AD%E6%B3%95">链接</a></p><p>#代码块</p><figure class="highlight c"><table><tr><td class="code"><pre><span class="line"><span class="type">int</span> <span class="title function_">cmp</span><span class="params">(<span class="type">const</span> <span class="type">void</span>* _a, <span class="type">const</span> <span class="type">void</span>* _b)</span> &#123;</span><br><span class="line">    <span class="type">int</span> a = *(<span class="type">int</span>*)_a, b = *(<span class="type">int</span>*)_b;</span><br><span class="line">    <span class="keyword">return</span> a - b;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> <span class="title function_">containsDuplicate</span><span class="params">(<span class="type">int</span>* nums, <span class="type">int</span> numsSize)</span> &#123;</span><br><span class="line">    qsort(nums, numsSize, <span class="keyword">sizeof</span>(<span class="type">int</span>), cmp);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; numsSize - <span class="number">1</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">if</span> (nums[i] == nums[i + <span class="number">1</span>]) &#123;</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Hexo部署过程中可能会出现错误</p><p>fatal: unable to access ‘<a href="https://github.com/a956551943/a956551943.github.io/">https://github.com/a956551943/a956551943.github.io/</a>‘: Encountered end of file<br>FATAL {<br>  err: Error: Spawn failed<br>      at ChildProcess.<anonymous> (&#x2F;usr&#x2F;local&#x2F;src&#x2F;hexo&#x2F;hanyubolg&#x2F;node_modules&#x2F;hexo-util&#x2F;lib&#x2F;spawn.js:51:21)<br>      at ChildProcess.emit (events.js:376:20)<br>      at Process.ChildProcess._handle.onexit (internal&#x2F;child_process.js:277:12) {<br>    code: 128<br>  }<br>} Something’s wrong. Maybe you can find the solution here: %s <a href="https://hexo.io/docs/troubleshooting.html">https://hexo.io/docs/troubleshooting.html</a><br>1<br>2<br>3<br>4<br>5<br>6<br>7<br>8<br>9<br>解决方式一：</p><p>spawn failed<br>(应该就是config俩内容不一样冲突了)</p><p>##进入站点根目录<br>cd &#x2F;d&#x2F;bolg&#x2F;</p><p>##删除git提交内容文件夹<br>rm -rf .deploy_git&#x2F;</p><p>##执行<br>git config –global core.autocrlf false</p><blockquote><p>文本文件保持原来的样子。</p></blockquote><p>##最后<br>hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</p>]]></content>
      
      
      
    </entry>
    
    
    
    <entry>
      <title>考研，你好！</title>
      <link href="/2023/04/06/%E8%80%83%E7%A0%94%EF%BC%8C%E4%BD%A0%E5%A5%BD/"/>
      <url>/2023/04/06/%E8%80%83%E7%A0%94%EF%BC%8C%E4%BD%A0%E5%A5%BD/</url>
      
        <content type="html"><![CDATA[<p>跌跌撞撞也学了一个月了，慢慢来吧</p><h2 id="乾坤未定，你我皆是黑马！"><a href="#乾坤未定，你我皆是黑马！" class="headerlink" title="乾坤未定，你我皆是黑马！"></a>乾坤未定，你我皆是黑马！</h2><h3 id="高数（宇哥）"><a href="#高数（宇哥）" class="headerlink" title="高数（宇哥）"></a>高数（宇哥）</h3><blockquote><p>该说不说，宇哥的视频讲解是真的细（虽然学一块，忘一块(;´༎ຶД༎ຶ&#96;) ），但感觉要赶赶进度了，到现在才第七讲结束，大概1&#x2F;3吧，呸，线代概率都没开呢，吐了，还有1800，大写的裂开！！！加油！骑牛人！</p></blockquote><p>Wake up: <a href="https://chat.openai.com/">起床啦！</a></p><h3 id="英语"><a href="#英语" class="headerlink" title="英语"></a>英语</h3><blockquote><p>不谈，背背单词刷刷黄皮书吧。。。太迷了呀！跟好田静老师每日一句，yyds！┗|｀O′|┛ 嗷~~，虽然不是那么看的懂</p></blockquote><p>GO！<a href="https://mp.weixin.qq.com/s/Wq-P-4LxCPoAXQOhM_cKVA">每日一句</a></p><h3 id="408"><a href="#408" class="headerlink" title="408"></a>408</h3><blockquote><p>痛苦之源！！！万恶之首！！！本来的规划啥的都蛮好的，结果看了眼408！！！彻底奔溃！！！漫天飞舞的代码，乱七八糟的核心态，用户态，四层七层五层协议，吧啦吧啦的，吐槽完毕！下机！还是得加油！牧牛人！！！</p></blockquote><p>You can’t beat Chen: <a href="https://leetcode.cn/problemset/all/">fighting！</a></p>]]></content>
      
      
      <categories>
          
          <category> 周期总结 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> categories; </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hello World</title>
      <link href="/2023/03/30/hello-world/"/>
      <url>/2023/03/30/hello-world/</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉，这个密码看着不太对，请再试试。" data-whm="抱歉，这个文章不能被纠正，不过您还是能看看解密后的内容。">  <script id="hbeData" type="hbeData" data-hmacdigest="403436f8571c9de2c2f3de6f542d18472f7e2ddf127cb7c873c60c64ce676c65">a05feb43657695e8c15cd40222a3762403ab995a710fce156d19de4644f413544987d05e602458e34c3f8078f111d448b442136072058596e660b6cbf081f1d5c73f84aa5f88cb3d29496944fc9924affa7961f1c583132708048327254a86c00ee4a1cab40a409549943ea9fbef3a2d06c989079162d965f6682b233259c1f1f9c5ca08c17d85cc261d1a47004d9b3e134ff0af58b725a5fc57a593e919ce5832a2857748fef4d697dd5b4716d8dd034a52ce3b07810256008091a1f8c7fec0796428e99ac5a7bc3d55d6a2bb992bdaa3c9a44a245d8c2426b180e431882d11c6335b647501f56e1f3ec2fedf5bb1214cc4e441c63944e7f83fbce17bbfc30f2504cad401807026521d2f93dbae7fa721281006f11bc19b9bb235eb1f62a84a26962d769570b9bc8d5ef2d7a91f4bdca361f2e8d5571ba810d4055b5426bb1964df5d143c6b55aa80cc9f76d4a5ef19d32a65be5d3fafe5a9d29ab67fd29e802766d72c5f5f7375fd3fce3c7dec7df0f0a6aa6a00b3d227994bcb156d973a2db881597efc11d12dd71d6df16a7577456d16583470aba824b6a2d700ae582f7fd08b7a9aed2207742471bb57519c6d5ef0503149283481a009f34dee3e461632879aa08a2ad074a898b6bfc5f61fc3ed9c7ddef405f4f02c91a200aebc89d165f16e59b578e8cae789a80c978b2cf8c45540869c904c2bc84c99ca08954f68de19022b90a47e391ecf3dd38cc348542857fc0867e78ccc398503b81f2d8cebed214e825369dcd4a684a5eb8d196444d99d25b153672507582f6caf10c3b9500d0d10cc0c8e730b7590032d61f6a6b33eaab32bfbe35f85f45f93409344037b20a7b95c0b9c07d458ce642aa09da804d473baa512fac1f3ec653e6b3b4116ac1c85e8b9695c2f2ec5e1b1c522aa110e5a1125bf8b2652c249769e7598c2508c09b22431d7f57fdf0836113d7f6bad00dc88eecb21ae493bc12bc4e5d66d54f187a2b30a27224158f7732f64e2fb8e870cb0afd145fd49ca6a22f3a48167e9d7a1dc4ce2c221ebc63ee04d187dcb252ee9951b1b8faab7c50397b5ee964f7d7b46e48a3fec400531b1724df712a29e6a0b2c78dbff22f0563dcd0e1147acfca15923b8724c2315a2e5cee173571f6a7608fed875b29eb89be47b393bc9d79e928ad46e782b2fcda1673f54ab2e49fc3ff61f44729bf1eaa2405499e0e42883345e8eabb6ff133f639544d22b79f8de1fc11b05d54575df7b7e1194557eb0bc20395541d797609d9baa7682c1d7c712ee71210e2a80964078707f5ef3259f2bca93fd20fc93ca63de5e9ff35c0688e6d175338ad2644c474f3c89e7c6da7da57045b0998a4898b9e59ba67142caa91bae25dbc3988b836b10e5f9306512d066e2a72d5e059f31a4f32cabd6a85a767e127a1dffbaea10550419fdc57d5d96c274a1a8a8f011cf24af3cc1eb05e4b859c1a69f79ff08f66b384329af35f76503a3ebec23c20c8f9e2c63e5ef30dc73583bb0aab9fbc6703be17aebd2a5b974817d258ef7fb7b0651ac7e3afd91d1ecb2fbea9d92de1c661d27c5a0c1fe284bc896ce1bede7a8c15c13cd6cd785f51a3ff1c0ea6e43beeb19b12a764f2750c6c6ba6889ce2595104d8b738f24d986cfc7c9483b398c9bd6ce6db7f505528a94827fb7605eaa026debb70bca5914cc84e77adf9b829f965191ad43705ca15f1837fa33f0e6ad3481ea027e13b9ea2e797dd0e66a8f4a2e0c51ad107cefe01d04114a0f3b1706d0f1b3a34da7a91cce5f4e3ea9</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-default">      <input class="hbe hbe-input-field hbe-input-field-default" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-default" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-default">生日。</span>      </label>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      
        <tags>
            
            <tag> 总结 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
